###############################################################################
#
# IAR C/C++ Compiler V10.20.1.5333 for 8051               08/Feb/2022  22:10:12
# Copyright 2004-2018 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Components\hal\target\CC2530EB\HW_LCD\HAL_TFT\hal_tft.c
#    Command line       =  
#        -f C:\usertemp\AppData\Local\Temp\EW7CB5.tmp ("I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Components\hal\target\CC2530EB\HW_LCD\HAL_TFT\hal_tft.c" -D
#        SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D NV_RESTORE -D xZTOOL_P1 -D
#        xMT_TASK -D xMT_APP_FUNC -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D
#        xMT_ZDO_MGMT -D xMT_APP_CNF_FUNC -D LCD_SUPPORTED=DEBUG -D
#        MULTICAST_ENABLED=FALSE -D ZCL_READ -D ZCL_DISCOVER -D ZCL_WRITE -D
#        ZCL_BASIC -D ZCL_IDENTIFY -D ZCL_ON_OFF -D ZCL_GROUPS -D
#        ZCL_REPORT_DESTINATION_DEVICE -D ZCL_REPORT -D HAL_LED=TRUE -D
#        HAL_KEY=TRUE -D ISR_KEYINTERRUPT -D HAL_UART=TRUE -D INT_HEAP_LEN=2300
#        -D HAL_LCD=TRUE -D xHAL_LCD_OLED12864 -D HAL_ADC=TRUE -D HAL_UART=TRUE
#        -D INT_HEAP_LEN=2048 -lC "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\CoordinatorEB\List"
#        -lA "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\CoordinatorEB\List"
#        --diag_suppress Pe001,Pa010 -o "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\CoordinatorEB\Obj"
#        -e --debug --core=plain --dptr=16,1 --data_model=large
#        --code_model=banked --calling_convention=xdata_reentrant
#        --place_constants=data_rom --nr_virtual_regs 8 -f
#        "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg"
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
#        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
#        -DZDO_COORDINATOR -DRTR_NWK) -f "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
#        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 -DDEFAULT_KEY={0} -DMAC_MAX_FRAME_SIZE=116
#        -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const __code"
#        -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000
#        -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440
#        -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000 -DENABLE_LED4_DISABLE_S1)
#        -f "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\" -I
#        "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\Source\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\Source\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\ZMain\TI2530DB\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\include\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mac\include\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mt\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\osal\include\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\services\saddr\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\services\sdata\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\af\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\bdb\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\gp\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\sec\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\sys\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\zcl\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\zmac\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\Common\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\SPI\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\HW_LCD\Font\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\HW_LCD\HAL_LCD_SPI\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\HW_LCD\HAL_OLED\"
#        -I "I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\HW_LCD\HAL_TFT\"
#        -Ohz --require_prototypes)
#    Locale             =  Chinese (Simplified)_CHN.936
#    List file          =  
#        I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\CoordinatorEB\List\hal_tft.lst
#    Object file        =  
#        I:\ZigBee3.0\Zigbee3.0
#        20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack
#        3.0.1\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\CoordinatorEB\Obj\hal_tft.r51
#
###############################################################################

I:\ZigBee3.0\Zigbee3.0 20211214\1.协议栈工作流程和无线收发控制LED\Z-Stack 3.0.1\Components\hal\target\CC2530EB\HW_LCD\HAL_TFT\hal_tft.c
      1          #include "hal_tft.h"

   \                                 In  segment SFR_AN, at 0x90
   \   union <unnamed> volatile __sfr _A_P1
   \                     _A_P1:
   \   000000                DS 1
      2          #include "font_h_8x16.h"

   \                                 In  segment XDATA_ROM_C, align 1
   \   static unsigned char const __xdata_rom FontTable_H_8X16[1520]
   \                     FontTable_H_8X16:
   \   000000   00           DB 0
   \   000001   00           DB 0
   \   000002   00           DB 0
   \   000003   00           DB 0
   \   000004   00           DB 0
   \   000005   00           DB 0
   \   000006   00           DB 0
   \   000007   00           DB 0
   \   000008   00           DB 0
   \   000009   00           DB 0
   \   00000A   00           DB 0
   \   00000B   00           DB 0
   \   00000C   00           DB 0
   \   00000D   00           DB 0
   \   00000E   00           DB 0
   \   00000F   00           DB 0
   \   000010   00           DB 0
   \   000011   10           DB 16
   \   000012   10           DB 16
   \   000013   10           DB 16
   \   000014   10           DB 16
   \   000015   10           DB 16
   \   000016   10           DB 16
   \   000017   10           DB 16
   \   000018   10           DB 16
   \   000019   10           DB 16
   \   00001A   00           DB 0
   \   00001B   00           DB 0
   \   00001C   10           DB 16
   \   00001D   10           DB 16
   \   00001E   00           DB 0
   \   00001F   00           DB 0
   \   000020   00           DB 0
   \   000021   00           DB 0
   \   000022   6C           DB 108
   \   000023   6C           DB 108
   \   000024   24           DB 36
   \   000025   24           DB 36
   \   000026   00           DB 0
   \   000027   00           DB 0
   \   000028   00           DB 0
   \   000029   00           DB 0
   \   00002A   01           DB 1
   \   00002B   00           DB 0
   \   00002C   00           DB 0
   \   00002D   00           DB 0
   \   00002E   00           DB 0
   \   00002F   00           DB 0
   \   000030   00           DB 0
   \   000031   24           DB 36
   \   000032   24           DB 36
   \   000033   24           DB 36
   \   000034   24           DB 36
   \   000035   FE           DB 254
   \   000036   48           DB 72
   \   000037   48           DB 72
   \   000038   48           DB 72
   \   000039   48           DB 72
   \   00003A   FC           DB 252
   \   00003B   90           DB 144
   \   00003C   90           DB 144
   \   00003D   90           DB 144
   \   00003E   90           DB 144
   \   00003F   00           DB 0
   \   000040   00           DB 0
   \   000041   10           DB 16
   \   000042   3C           DB 60
   \   000043   54           DB 84
   \   000044   92           DB 146
   \   000045   90           DB 144
   \   000046   50           DB 80
   \   000047   38           DB 56
   \   000048   14           DB 20
   \   000049   12           DB 18
   \   00004A   12           DB 18
   \   00004B   92           DB 146
   \   00004C   54           DB 84
   \   00004D   78           DB 120
   \   00004E   10           DB 16
   \   00004F   00           DB 0
   \   000050   00           DB 0
   \   000051   00           DB 0
   \   000052   22           DB 34
   \   000053   5C           DB 92
   \   000054   94           DB 148
   \   000055   A8           DB 168
   \   000056   48           DB 72
   \   000057   10           DB 16
   \   000058   10           DB 16
   \   000059   24           DB 36
   \   00005A   2A           DB 42
   \   00005B   52           DB 82
   \   00005C   54           DB 84
   \   00005D   88           DB 136
   \   00005E   00           DB 0
   \   00005F   00           DB 0
   \   000060   00           DB 0
   \   000061   00           DB 0
   \   000062   30           DB 48
   \   000063   48           DB 72
   \   000064   48           DB 72
   \   000065   50           DB 80
   \   000066   20           DB 32
   \   000067   6E           DB 110
   \   000068   54           DB 84
   \   000069   94           DB 148
   \   00006A   8C           DB 140
   \   00006B   88           DB 136
   \   00006C   8A           DB 138
   \   00006D   74           DB 116
   \   00006E   00           DB 0
   \   00006F   00           DB 0
   \   000070   00           DB 0
   \   000071   00           DB 0
   \   000072   30           DB 48
   \   000073   30           DB 48
   \   000074   10           DB 16
   \   000075   10           DB 16
   \   000076   00           DB 0
   \   000077   00           DB 0
   \   000078   00           DB 0
   \   000079   00           DB 0
   \   00007A   00           DB 0
   \   00007B   00           DB 0
   \   00007C   00           DB 0
   \   00007D   00           DB 0
   \   00007E   00           DB 0
   \   00007F   00           DB 0
   \   000080   00           DB 0
   \   000081   04           DB 4
   \   000082   08           DB 8
   \   000083   10           DB 16
   \   000084   10           DB 16
   \   000085   20           DB 32
   \   000086   20           DB 32
   \   000087   20           DB 32
   \   000088   20           DB 32
   \   000089   20           DB 32
   \   00008A   20           DB 32
   \   00008B   10           DB 16
   \   00008C   10           DB 16
   \   00008D   08           DB 8
   \   00008E   04           DB 4
   \   00008F   00           DB 0
   \   000090   00           DB 0
   \   000091   80           DB 128
   \   000092   40           DB 64
   \   000093   20           DB 32
   \   000094   20           DB 32
   \   000095   10           DB 16
   \   000096   10           DB 16
   \   000097   10           DB 16
   \   000098   10           DB 16
   \   000099   10           DB 16
   \   00009A   10           DB 16
   \   00009B   20           DB 32
   \   00009C   20           DB 32
   \   00009D   40           DB 64
   \   00009E   80           DB 128
   \   00009F   00           DB 0
   \   0000A0   00           DB 0
   \   0000A1   00           DB 0
   \   0000A2   00           DB 0
   \   0000A3   00           DB 0
   \   0000A4   10           DB 16
   \   0000A5   54           DB 84
   \   0000A6   38           DB 56
   \   0000A7   10           DB 16
   \   0000A8   38           DB 56
   \   0000A9   54           DB 84
   \   0000AA   10           DB 16
   \   0000AB   00           DB 0
   \   0000AC   00           DB 0
   \   0000AD   00           DB 0
   \   0000AE   00           DB 0
   \   0000AF   00           DB 0
   \   0000B0   00           DB 0
   \   0000B1   00           DB 0
   \   0000B2   00           DB 0
   \   0000B3   10           DB 16
   \   0000B4   10           DB 16
   \   0000B5   10           DB 16
   \   0000B6   10           DB 16
   \   0000B7   FE           DB 254
   \   0000B8   10           DB 16
   \   0000B9   10           DB 16
   \   0000BA   10           DB 16
   \   0000BB   10           DB 16
   \   0000BC   00           DB 0
   \   0000BD   00           DB 0
   \   0000BE   00           DB 0
   \   0000BF   00           DB 0
   \   0000C0   00           DB 0
   \   0000C1   00           DB 0
   \   0000C2   00           DB 0
   \   0000C3   00           DB 0
   \   0000C4   00           DB 0
   \   0000C5   00           DB 0
   \   0000C6   00           DB 0
   \   0000C7   00           DB 0
   \   0000C8   00           DB 0
   \   0000C9   00           DB 0
   \   0000CA   00           DB 0
   \   0000CB   00           DB 0
   \   0000CC   10           DB 16
   \   0000CD   10           DB 16
   \   0000CE   20           DB 32
   \   0000CF   00           DB 0
   \   0000D0   00           DB 0
   \   0000D1   00           DB 0
   \   0000D2   00           DB 0
   \   0000D3   00           DB 0
   \   0000D4   00           DB 0
   \   0000D5   00           DB 0
   \   0000D6   00           DB 0
   \   0000D7   FE           DB 254
   \   0000D8   00           DB 0
   \   0000D9   00           DB 0
   \   0000DA   00           DB 0
   \   0000DB   00           DB 0
   \   0000DC   00           DB 0
   \   0000DD   00           DB 0
   \   0000DE   00           DB 0
   \   0000DF   00           DB 0
   \   0000E0   00           DB 0
   \   0000E1   00           DB 0
   \   0000E2   00           DB 0
   \   0000E3   00           DB 0
   \   0000E4   00           DB 0
   \   0000E5   00           DB 0
   \   0000E6   00           DB 0
   \   0000E7   00           DB 0
   \   0000E8   00           DB 0
   \   0000E9   00           DB 0
   \   0000EA   00           DB 0
   \   0000EB   00           DB 0
   \   0000EC   10           DB 16
   \   0000ED   10           DB 16
   \   0000EE   00           DB 0
   \   0000EF   00           DB 0
   \   0000F0   00           DB 0
   \   0000F1   00           DB 0
   \   0000F2   04           DB 4
   \   0000F3   04           DB 4
   \   0000F4   08           DB 8
   \   0000F5   08           DB 8
   \   0000F6   10           DB 16
   \   0000F7   10           DB 16
   \   0000F8   20           DB 32
   \   0000F9   20           DB 32
   \   0000FA   40           DB 64
   \   0000FB   40           DB 64
   \   0000FC   80           DB 128
   \   0000FD   80           DB 128
   \   0000FE   00           DB 0
   \   0000FF   00           DB 0
   \   000100   00           DB 0
   \   000101   00           DB 0
   \   000102   38           DB 56
   \   000103   44           DB 68
   \   000104   82           DB 130
   \   000105   82           DB 130
   \   000106   82           DB 130
   \   000107   82           DB 130
   \   000108   82           DB 130
   \   000109   82           DB 130
   \   00010A   82           DB 130
   \   00010B   82           DB 130
   \   00010C   44           DB 68
   \   00010D   38           DB 56
   \   00010E   00           DB 0
   \   00010F   00           DB 0
   \   000110   00           DB 0
   \   000111   00           DB 0
   \   000112   10           DB 16
   \   000113   70           DB 112
   \   000114   10           DB 16
   \   000115   10           DB 16
   \   000116   10           DB 16
   \   000117   10           DB 16
   \   000118   10           DB 16
   \   000119   10           DB 16
   \   00011A   10           DB 16
   \   00011B   10           DB 16
   \   00011C   10           DB 16
   \   00011D   7C           DB 124
   \   00011E   00           DB 0
   \   00011F   00           DB 0
   \   000120   00           DB 0
   \   000121   00           DB 0
   \   000122   38           DB 56
   \   000123   44           DB 68
   \   000124   82           DB 130
   \   000125   82           DB 130
   \   000126   04           DB 4
   \   000127   08           DB 8
   \   000128   10           DB 16
   \   000129   20           DB 32
   \   00012A   40           DB 64
   \   00012B   82           DB 130
   \   00012C   84           DB 132
   \   00012D   FC           DB 252
   \   00012E   00           DB 0
   \   00012F   00           DB 0
   \   000130   00           DB 0
   \   000131   00           DB 0
   \   000132   38           DB 56
   \   000133   44           DB 68
   \   000134   82           DB 130
   \   000135   02           DB 2
   \   000136   04           DB 4
   \   000137   38           DB 56
   \   000138   04           DB 4
   \   000139   02           DB 2
   \   00013A   02           DB 2
   \   00013B   82           DB 130
   \   00013C   44           DB 68
   \   00013D   38           DB 56
   \   00013E   00           DB 0
   \   00013F   00           DB 0
   \   000140   00           DB 0
   \   000141   00           DB 0
   \   000142   04           DB 4
   \   000143   0C           DB 12
   \   000144   14           DB 20
   \   000145   14           DB 20
   \   000146   24           DB 36
   \   000147   24           DB 36
   \   000148   44           DB 68
   \   000149   44           DB 68
   \   00014A   FE           DB 254
   \   00014B   04           DB 4
   \   00014C   04           DB 4
   \   00014D   0E           DB 14
   \   00014E   00           DB 0
   \   00014F   00           DB 0
   \   000150   00           DB 0
   \   000151   00           DB 0
   \   000152   FC           DB 252
   \   000153   80           DB 128
   \   000154   80           DB 128
   \   000155   80           DB 128
   \   000156   B8           DB 184
   \   000157   C4           DB 196
   \   000158   82           DB 130
   \   000159   02           DB 2
   \   00015A   02           DB 2
   \   00015B   82           DB 130
   \   00015C   84           DB 132
   \   00015D   78           DB 120
   \   00015E   00           DB 0
   \   00015F   00           DB 0
   \   000160   00           DB 0
   \   000161   00           DB 0
   \   000162   3C           DB 60
   \   000163   42           DB 66
   \   000164   82           DB 130
   \   000165   80           DB 128
   \   000166   B8           DB 184
   \   000167   C4           DB 196
   \   000168   82           DB 130
   \   000169   82           DB 130
   \   00016A   82           DB 130
   \   00016B   82           DB 130
   \   00016C   44           DB 68
   \   00016D   38           DB 56
   \   00016E   00           DB 0
   \   00016F   00           DB 0
   \   000170   00           DB 0
   \   000171   00           DB 0
   \   000172   7E           DB 126
   \   000173   42           DB 66
   \   000174   82           DB 130
   \   000175   04           DB 4
   \   000176   04           DB 4
   \   000177   08           DB 8
   \   000178   08           DB 8
   \   000179   08           DB 8
   \   00017A   10           DB 16
   \   00017B   10           DB 16
   \   00017C   10           DB 16
   \   00017D   10           DB 16
   \   00017E   00           DB 0
   \   00017F   00           DB 0
   \   000180   00           DB 0
   \   000181   00           DB 0
   \   000182   38           DB 56
   \   000183   44           DB 68
   \   000184   82           DB 130
   \   000185   82           DB 130
   \   000186   44           DB 68
   \   000187   38           DB 56
   \   000188   44           DB 68
   \   000189   82           DB 130
   \   00018A   82           DB 130
   \   00018B   82           DB 130
   \   00018C   44           DB 68
   \   00018D   38           DB 56
   \   00018E   00           DB 0
   \   00018F   00           DB 0
   \   000190   00           DB 0
   \   000191   00           DB 0
   \   000192   38           DB 56
   \   000193   44           DB 68
   \   000194   82           DB 130
   \   000195   82           DB 130
   \   000196   82           DB 130
   \   000197   82           DB 130
   \   000198   46           DB 70
   \   000199   3A           DB 58
   \   00019A   02           DB 2
   \   00019B   82           DB 130
   \   00019C   44           DB 68
   \   00019D   38           DB 56
   \   00019E   00           DB 0
   \   00019F   00           DB 0
   \   0001A0   00           DB 0
   \   0001A1   00           DB 0
   \   0001A2   00           DB 0
   \   0001A3   00           DB 0
   \   0001A4   10           DB 16
   \   0001A5   10           DB 16
   \   0001A6   00           DB 0
   \   0001A7   00           DB 0
   \   0001A8   00           DB 0
   \   0001A9   00           DB 0
   \   0001AA   10           DB 16
   \   0001AB   10           DB 16
   \   0001AC   00           DB 0
   \   0001AD   00           DB 0
   \   0001AE   00           DB 0
   \   0001AF   00           DB 0
   \   0001B0   00           DB 0
   \   0001B1   00           DB 0
   \   0001B2   00           DB 0
   \   0001B3   00           DB 0
   \   0001B4   10           DB 16
   \   0001B5   10           DB 16
   \   0001B6   00           DB 0
   \   0001B7   00           DB 0
   \   0001B8   00           DB 0
   \   0001B9   00           DB 0
   \   0001BA   00           DB 0
   \   0001BB   10           DB 16
   \   0001BC   10           DB 16
   \   0001BD   20           DB 32
   \   0001BE   00           DB 0
   \   0001BF   00           DB 0
   \   0001C0   00           DB 0
   \   0001C1   00           DB 0
   \   0001C2   00           DB 0
   \   0001C3   00           DB 0
   \   0001C4   06           DB 6
   \   0001C5   18           DB 24
   \   0001C6   60           DB 96
   \   0001C7   80           DB 128
   \   0001C8   60           DB 96
   \   0001C9   18           DB 24
   \   0001CA   06           DB 6
   \   0001CB   00           DB 0
   \   0001CC   00           DB 0
   \   0001CD   00           DB 0
   \   0001CE   00           DB 0
   \   0001CF   00           DB 0
   \   0001D0   00           DB 0
   \   0001D1   00           DB 0
   \   0001D2   00           DB 0
   \   0001D3   00           DB 0
   \   0001D4   00           DB 0
   \   0001D5   00           DB 0
   \   0001D6   FE           DB 254
   \   0001D7   00           DB 0
   \   0001D8   00           DB 0
   \   0001D9   FE           DB 254
   \   0001DA   00           DB 0
   \   0001DB   00           DB 0
   \   0001DC   00           DB 0
   \   0001DD   00           DB 0
   \   0001DE   00           DB 0
   \   0001DF   00           DB 0
   \   0001E0   00           DB 0
   \   0001E1   00           DB 0
   \   0001E2   00           DB 0
   \   0001E3   00           DB 0
   \   0001E4   C0           DB 192
   \   0001E5   30           DB 48
   \   0001E6   0C           DB 12
   \   0001E7   02           DB 2
   \   0001E8   0C           DB 12
   \   0001E9   30           DB 48
   \   0001EA   C0           DB 192
   \   0001EB   00           DB 0
   \   0001EC   00           DB 0
   \   0001ED   00           DB 0
   \   0001EE   00           DB 0
   \   0001EF   00           DB 0
   \   0001F0   00           DB 0
   \   0001F1   38           DB 56
   \   0001F2   44           DB 68
   \   0001F3   82           DB 130
   \   0001F4   82           DB 130
   \   0001F5   02           DB 2
   \   0001F6   04           DB 4
   \   0001F7   08           DB 8
   \   0001F8   10           DB 16
   \   0001F9   10           DB 16
   \   0001FA   10           DB 16
   \   0001FB   00           DB 0
   \   0001FC   10           DB 16
   \   0001FD   10           DB 16
   \   0001FE   00           DB 0
   \   0001FF   00           DB 0
   \   000200   00           DB 0
   \   000201   00           DB 0
   \   000202   38           DB 56
   \   000203   44           DB 68
   \   000204   82           DB 130
   \   000205   9A           DB 154
   \   000206   AA           DB 170
   \   000207   AA           DB 170
   \   000208   AA           DB 170
   \   000209   AA           DB 170
   \   00020A   AA           DB 170
   \   00020B   96           DB 150
   \   00020C   80           DB 128
   \   00020D   42           DB 66
   \   00020E   3C           DB 60
   \   00020F   00           DB 0
   \   000210   00           DB 0
   \   000211   00           DB 0
   \   000212   10           DB 16
   \   000213   10           DB 16
   \   000214   10           DB 16
   \   000215   28           DB 40
   \   000216   28           DB 40
   \   000217   28           DB 40
   \   000218   44           DB 68
   \   000219   44           DB 68
   \   00021A   7C           DB 124
   \   00021B   44           DB 68
   \   00021C   44           DB 68
   \   00021D   EE           DB 238
   \   00021E   00           DB 0
   \   00021F   00           DB 0
   \   000220   00           DB 0
   \   000221   00           DB 0
   \   000222   FC           DB 252
   \   000223   42           DB 66
   \   000224   42           DB 66
   \   000225   42           DB 66
   \   000226   42           DB 66
   \   000227   7C           DB 124
   \   000228   42           DB 66
   \   000229   42           DB 66
   \   00022A   42           DB 66
   \   00022B   42           DB 66
   \   00022C   42           DB 66
   \   00022D   FC           DB 252
   \   00022E   00           DB 0
   \   00022F   00           DB 0
   \   000230   00           DB 0
   \   000231   00           DB 0
   \   000232   3C           DB 60
   \   000233   44           DB 68
   \   000234   82           DB 130
   \   000235   80           DB 128
   \   000236   80           DB 128
   \   000237   80           DB 128
   \   000238   80           DB 128
   \   000239   80           DB 128
   \   00023A   82           DB 130
   \   00023B   82           DB 130
   \   00023C   44           DB 68
   \   00023D   38           DB 56
   \   00023E   00           DB 0
   \   00023F   00           DB 0
   \   000240   00           DB 0
   \   000241   00           DB 0
   \   000242   F8           DB 248
   \   000243   44           DB 68
   \   000244   42           DB 66
   \   000245   42           DB 66
   \   000246   42           DB 66
   \   000247   42           DB 66
   \   000248   42           DB 66
   \   000249   42           DB 66
   \   00024A   42           DB 66
   \   00024B   42           DB 66
   \   00024C   44           DB 68
   \   00024D   F8           DB 248
   \   00024E   00           DB 0
   \   00024F   00           DB 0
   \   000250   00           DB 0
   \   000251   00           DB 0
   \   000252   FC           DB 252
   \   000253   44           DB 68
   \   000254   42           DB 66
   \   000255   40           DB 64
   \   000256   44           DB 68
   \   000257   7C           DB 124
   \   000258   44           DB 68
   \   000259   40           DB 64
   \   00025A   40           DB 64
   \   00025B   42           DB 66
   \   00025C   44           DB 68
   \   00025D   FC           DB 252
   \   00025E   00           DB 0
   \   00025F   00           DB 0
   \   000260   00           DB 0
   \   000261   00           DB 0
   \   000262   FC           DB 252
   \   000263   44           DB 68
   \   000264   42           DB 66
   \   000265   40           DB 64
   \   000266   44           DB 68
   \   000267   7C           DB 124
   \   000268   44           DB 68
   \   000269   40           DB 64
   \   00026A   40           DB 64
   \   00026B   40           DB 64
   \   00026C   40           DB 64
   \   00026D   F0           DB 240
   \   00026E   00           DB 0
   \   00026F   00           DB 0
   \   000270   00           DB 0
   \   000271   00           DB 0
   \   000272   34           DB 52
   \   000273   4C           DB 76
   \   000274   82           DB 130
   \   000275   80           DB 128
   \   000276   80           DB 128
   \   000277   80           DB 128
   \   000278   8E           DB 142
   \   000279   84           DB 132
   \   00027A   84           DB 132
   \   00027B   84           DB 132
   \   00027C   4C           DB 76
   \   00027D   34           DB 52
   \   00027E   00           DB 0
   \   00027F   00           DB 0
   \   000280   00           DB 0
   \   000281   00           DB 0
   \   000282   EE           DB 238
   \   000283   44           DB 68
   \   000284   44           DB 68
   \   000285   44           DB 68
   \   000286   44           DB 68
   \   000287   7C           DB 124
   \   000288   44           DB 68
   \   000289   44           DB 68
   \   00028A   44           DB 68
   \   00028B   44           DB 68
   \   00028C   44           DB 68
   \   00028D   EE           DB 238
   \   00028E   00           DB 0
   \   00028F   00           DB 0
   \   000290   00           DB 0
   \   000291   00           DB 0
   \   000292   7C           DB 124
   \   000293   10           DB 16
   \   000294   10           DB 16
   \   000295   10           DB 16
   \   000296   10           DB 16
   \   000297   10           DB 16
   \   000298   10           DB 16
   \   000299   10           DB 16
   \   00029A   10           DB 16
   \   00029B   10           DB 16
   \   00029C   10           DB 16
   \   00029D   7C           DB 124
   \   00029E   00           DB 0
   \   00029F   00           DB 0
   \   0002A0   00           DB 0
   \   0002A1   00           DB 0
   \   0002A2   3E           DB 62
   \   0002A3   08           DB 8
   \   0002A4   08           DB 8
   \   0002A5   08           DB 8
   \   0002A6   08           DB 8
   \   0002A7   08           DB 8
   \   0002A8   08           DB 8
   \   0002A9   08           DB 8
   \   0002AA   08           DB 8
   \   0002AB   88           DB 136
   \   0002AC   88           DB 136
   \   0002AD   70           DB 112
   \   0002AE   00           DB 0
   \   0002AF   00           DB 0
   \   0002B0   00           DB 0
   \   0002B1   00           DB 0
   \   0002B2   EE           DB 238
   \   0002B3   44           DB 68
   \   0002B4   48           DB 72
   \   0002B5   48           DB 72
   \   0002B6   50           DB 80
   \   0002B7   60           DB 96
   \   0002B8   50           DB 80
   \   0002B9   48           DB 72
   \   0002BA   48           DB 72
   \   0002BB   44           DB 68
   \   0002BC   44           DB 68
   \   0002BD   EE           DB 238
   \   0002BE   00           DB 0
   \   0002BF   00           DB 0
   \   0002C0   00           DB 0
   \   0002C1   00           DB 0
   \   0002C2   E0           DB 224
   \   0002C3   40           DB 64
   \   0002C4   40           DB 64
   \   0002C5   40           DB 64
   \   0002C6   40           DB 64
   \   0002C7   40           DB 64
   \   0002C8   40           DB 64
   \   0002C9   40           DB 64
   \   0002CA   40           DB 64
   \   0002CB   42           DB 66
   \   0002CC   44           DB 68
   \   0002CD   FC           DB 252
   \   0002CE   00           DB 0
   \   0002CF   00           DB 0
   \   0002D0   00           DB 0
   \   0002D1   00           DB 0
   \   0002D2   C6           DB 198
   \   0002D3   44           DB 68
   \   0002D4   6C           DB 108
   \   0002D5   6C           DB 108
   \   0002D6   6C           DB 108
   \   0002D7   54           DB 84
   \   0002D8   54           DB 84
   \   0002D9   54           DB 84
   \   0002DA   44           DB 68
   \   0002DB   44           DB 68
   \   0002DC   44           DB 68
   \   0002DD   EE           DB 238
   \   0002DE   00           DB 0
   \   0002DF   00           DB 0
   \   0002E0   00           DB 0
   \   0002E1   00           DB 0
   \   0002E2   CE           DB 206
   \   0002E3   44           DB 68
   \   0002E4   64           DB 100
   \   0002E5   64           DB 100
   \   0002E6   64           DB 100
   \   0002E7   54           DB 84
   \   0002E8   54           DB 84
   \   0002E9   4C           DB 76
   \   0002EA   4C           DB 76
   \   0002EB   4C           DB 76
   \   0002EC   44           DB 68
   \   0002ED   E4           DB 228
   \   0002EE   00           DB 0
   \   0002EF   00           DB 0
   \   0002F0   00           DB 0
   \   0002F1   00           DB 0
   \   0002F2   38           DB 56
   \   0002F3   44           DB 68
   \   0002F4   82           DB 130
   \   0002F5   82           DB 130
   \   0002F6   82           DB 130
   \   0002F7   82           DB 130
   \   0002F8   82           DB 130
   \   0002F9   82           DB 130
   \   0002FA   82           DB 130
   \   0002FB   82           DB 130
   \   0002FC   44           DB 68
   \   0002FD   38           DB 56
   \   0002FE   00           DB 0
   \   0002FF   00           DB 0
   \   000300   00           DB 0
   \   000301   00           DB 0
   \   000302   F8           DB 248
   \   000303   44           DB 68
   \   000304   42           DB 66
   \   000305   42           DB 66
   \   000306   42           DB 66
   \   000307   44           DB 68
   \   000308   78           DB 120
   \   000309   40           DB 64
   \   00030A   40           DB 64
   \   00030B   40           DB 64
   \   00030C   40           DB 64
   \   00030D   E0           DB 224
   \   00030E   00           DB 0
   \   00030F   00           DB 0
   \   000310   00           DB 0
   \   000311   00           DB 0
   \   000312   38           DB 56
   \   000313   44           DB 68
   \   000314   82           DB 130
   \   000315   82           DB 130
   \   000316   82           DB 130
   \   000317   82           DB 130
   \   000318   82           DB 130
   \   000319   82           DB 130
   \   00031A   82           DB 130
   \   00031B   BA           DB 186
   \   00031C   44           DB 68
   \   00031D   3C           DB 60
   \   00031E   02           DB 2
   \   00031F   00           DB 0
   \   000320   00           DB 0
   \   000321   00           DB 0
   \   000322   F0           DB 240
   \   000323   48           DB 72
   \   000324   44           DB 68
   \   000325   44           DB 68
   \   000326   44           DB 68
   \   000327   48           DB 72
   \   000328   70           DB 112
   \   000329   48           DB 72
   \   00032A   44           DB 68
   \   00032B   44           DB 68
   \   00032C   44           DB 68
   \   00032D   E6           DB 230
   \   00032E   00           DB 0
   \   00032F   00           DB 0
   \   000330   00           DB 0
   \   000331   00           DB 0
   \   000332   3C           DB 60
   \   000333   44           DB 68
   \   000334   82           DB 130
   \   000335   80           DB 128
   \   000336   40           DB 64
   \   000337   30           DB 48
   \   000338   0C           DB 12
   \   000339   02           DB 2
   \   00033A   02           DB 2
   \   00033B   82           DB 130
   \   00033C   44           DB 68
   \   00033D   78           DB 120
   \   00033E   00           DB 0
   \   00033F   00           DB 0
   \   000340   00           DB 0
   \   000341   00           DB 0
   \   000342   7C           DB 124
   \   000343   54           DB 84
   \   000344   92           DB 146
   \   000345   10           DB 16
   \   000346   10           DB 16
   \   000347   10           DB 16
   \   000348   10           DB 16
   \   000349   10           DB 16
   \   00034A   10           DB 16
   \   00034B   10           DB 16
   \   00034C   10           DB 16
   \   00034D   38           DB 56
   \   00034E   00           DB 0
   \   00034F   00           DB 0
   \   000350   00           DB 0
   \   000351   00           DB 0
   \   000352   EE           DB 238
   \   000353   44           DB 68
   \   000354   44           DB 68
   \   000355   44           DB 68
   \   000356   44           DB 68
   \   000357   44           DB 68
   \   000358   44           DB 68
   \   000359   44           DB 68
   \   00035A   44           DB 68
   \   00035B   44           DB 68
   \   00035C   44           DB 68
   \   00035D   38           DB 56
   \   00035E   00           DB 0
   \   00035F   00           DB 0
   \   000360   00           DB 0
   \   000361   00           DB 0
   \   000362   EE           DB 238
   \   000363   44           DB 68
   \   000364   44           DB 68
   \   000365   44           DB 68
   \   000366   44           DB 68
   \   000367   28           DB 40
   \   000368   28           DB 40
   \   000369   28           DB 40
   \   00036A   28           DB 40
   \   00036B   10           DB 16
   \   00036C   10           DB 16
   \   00036D   10           DB 16
   \   00036E   00           DB 0
   \   00036F   00           DB 0
   \   000370   00           DB 0
   \   000371   00           DB 0
   \   000372   EE           DB 238
   \   000373   44           DB 68
   \   000374   54           DB 84
   \   000375   54           DB 84
   \   000376   54           DB 84
   \   000377   54           DB 84
   \   000378   54           DB 84
   \   000379   54           DB 84
   \   00037A   28           DB 40
   \   00037B   28           DB 40
   \   00037C   28           DB 40
   \   00037D   28           DB 40
   \   00037E   00           DB 0
   \   00037F   00           DB 0
   \   000380   00           DB 0
   \   000381   00           DB 0
   \   000382   EE           DB 238
   \   000383   44           DB 68
   \   000384   44           DB 68
   \   000385   28           DB 40
   \   000386   28           DB 40
   \   000387   10           DB 16
   \   000388   10           DB 16
   \   000389   28           DB 40
   \   00038A   28           DB 40
   \   00038B   44           DB 68
   \   00038C   44           DB 68
   \   00038D   EE           DB 238
   \   00038E   00           DB 0
   \   00038F   00           DB 0
   \   000390   00           DB 0
   \   000391   00           DB 0
   \   000392   EE           DB 238
   \   000393   44           DB 68
   \   000394   44           DB 68
   \   000395   28           DB 40
   \   000396   28           DB 40
   \   000397   28           DB 40
   \   000398   10           DB 16
   \   000399   10           DB 16
   \   00039A   10           DB 16
   \   00039B   10           DB 16
   \   00039C   10           DB 16
   \   00039D   38           DB 56
   \   00039E   00           DB 0
   \   00039F   00           DB 0
   \   0003A0   00           DB 0
   \   0003A1   00           DB 0
   \   0003A2   7E           DB 126
   \   0003A3   44           DB 68
   \   0003A4   84           DB 132
   \   0003A5   08           DB 8
   \   0003A6   08           DB 8
   \   0003A7   10           DB 16
   \   0003A8   20           DB 32
   \   0003A9   20           DB 32
   \   0003AA   40           DB 64
   \   0003AB   82           DB 130
   \   0003AC   84           DB 132
   \   0003AD   FC           DB 252
   \   0003AE   00           DB 0
   \   0003AF   00           DB 0
   \   0003B0   00           DB 0
   \   0003B1   1C           DB 28
   \   0003B2   10           DB 16
   \   0003B3   10           DB 16
   \   0003B4   10           DB 16
   \   0003B5   10           DB 16
   \   0003B6   10           DB 16
   \   0003B7   10           DB 16
   \   0003B8   10           DB 16
   \   0003B9   10           DB 16
   \   0003BA   10           DB 16
   \   0003BB   10           DB 16
   \   0003BC   10           DB 16
   \   0003BD   10           DB 16
   \   0003BE   1C           DB 28
   \   0003BF   00           DB 0
   \   0003C0   00           DB 0
   \   0003C1   00           DB 0
   \   0003C2   EE           DB 238
   \   0003C3   44           DB 68
   \   0003C4   54           DB 84
   \   0003C5   54           DB 84
   \   0003C6   FE           DB 254
   \   0003C7   54           DB 84
   \   0003C8   54           DB 84
   \   0003C9   54           DB 84
   \   0003CA   28           DB 40
   \   0003CB   28           DB 40
   \   0003CC   28           DB 40
   \   0003CD   28           DB 40
   \   0003CE   00           DB 0
   \   0003CF   00           DB 0
   \   0003D0   00           DB 0
   \   0003D1   70           DB 112
   \   0003D2   10           DB 16
   \   0003D3   10           DB 16
   \   0003D4   10           DB 16
   \   0003D5   10           DB 16
   \   0003D6   10           DB 16
   \   0003D7   10           DB 16
   \   0003D8   10           DB 16
   \   0003D9   10           DB 16
   \   0003DA   10           DB 16
   \   0003DB   10           DB 16
   \   0003DC   10           DB 16
   \   0003DD   10           DB 16
   \   0003DE   70           DB 112
   \   0003DF   00           DB 0
   \   0003E0   00           DB 0
   \   0003E1   30           DB 48
   \   0003E2   48           DB 72
   \   0003E3   84           DB 132
   \   0003E4   00           DB 0
   \   0003E5   00           DB 0
   \   0003E6   00           DB 0
   \   0003E7   00           DB 0
   \   0003E8   00           DB 0
   \   0003E9   00           DB 0
   \   0003EA   00           DB 0
   \   0003EB   00           DB 0
   \   0003EC   00           DB 0
   \   0003ED   00           DB 0
   \   0003EE   00           DB 0
   \   0003EF   00           DB 0
   \   0003F0   00           DB 0
   \   0003F1   00           DB 0
   \   0003F2   00           DB 0
   \   0003F3   00           DB 0
   \   0003F4   00           DB 0
   \   0003F5   00           DB 0
   \   0003F6   00           DB 0
   \   0003F7   00           DB 0
   \   0003F8   00           DB 0
   \   0003F9   00           DB 0
   \   0003FA   00           DB 0
   \   0003FB   00           DB 0
   \   0003FC   00           DB 0
   \   0003FD   00           DB 0
   \   0003FE   FE           DB 254
   \   0003FF   00           DB 0
   \   000400   00           DB 0
   \   000401   40           DB 64
   \   000402   20           DB 32
   \   000403   00           DB 0
   \   000404   00           DB 0
   \   000405   00           DB 0
   \   000406   00           DB 0
   \   000407   00           DB 0
   \   000408   00           DB 0
   \   000409   00           DB 0
   \   00040A   00           DB 0
   \   00040B   00           DB 0
   \   00040C   00           DB 0
   \   00040D   00           DB 0
   \   00040E   00           DB 0
   \   00040F   00           DB 0
   \   000410   00           DB 0
   \   000411   00           DB 0
   \   000412   00           DB 0
   \   000413   00           DB 0
   \   000414   00           DB 0
   \   000415   00           DB 0
   \   000416   78           DB 120
   \   000417   84           DB 132
   \   000418   04           DB 4
   \   000419   7C           DB 124
   \   00041A   84           DB 132
   \   00041B   84           DB 132
   \   00041C   8C           DB 140
   \   00041D   76           DB 118
   \   00041E   00           DB 0
   \   00041F   00           DB 0
   \   000420   00           DB 0
   \   000421   00           DB 0
   \   000422   C0           DB 192
   \   000423   40           DB 64
   \   000424   40           DB 64
   \   000425   40           DB 64
   \   000426   58           DB 88
   \   000427   64           DB 100
   \   000428   42           DB 66
   \   000429   42           DB 66
   \   00042A   42           DB 66
   \   00042B   42           DB 66
   \   00042C   64           DB 100
   \   00042D   58           DB 88
   \   00042E   00           DB 0
   \   00042F   00           DB 0
   \   000430   00           DB 0
   \   000431   00           DB 0
   \   000432   00           DB 0
   \   000433   00           DB 0
   \   000434   00           DB 0
   \   000435   00           DB 0
   \   000436   38           DB 56
   \   000437   44           DB 68
   \   000438   80           DB 128
   \   000439   80           DB 128
   \   00043A   80           DB 128
   \   00043B   80           DB 128
   \   00043C   44           DB 68
   \   00043D   38           DB 56
   \   00043E   00           DB 0
   \   00043F   00           DB 0
   \   000440   00           DB 0
   \   000441   00           DB 0
   \   000442   0C           DB 12
   \   000443   04           DB 4
   \   000444   04           DB 4
   \   000445   04           DB 4
   \   000446   34           DB 52
   \   000447   4C           DB 76
   \   000448   84           DB 132
   \   000449   84           DB 132
   \   00044A   84           DB 132
   \   00044B   84           DB 132
   \   00044C   4C           DB 76
   \   00044D   36           DB 54
   \   00044E   00           DB 0
   \   00044F   00           DB 0
   \   000450   00           DB 0
   \   000451   00           DB 0
   \   000452   00           DB 0
   \   000453   00           DB 0
   \   000454   00           DB 0
   \   000455   00           DB 0
   \   000456   78           DB 120
   \   000457   84           DB 132
   \   000458   84           DB 132
   \   000459   FC           DB 252
   \   00045A   80           DB 128
   \   00045B   80           DB 128
   \   00045C   84           DB 132
   \   00045D   78           DB 120
   \   00045E   00           DB 0
   \   00045F   00           DB 0
   \   000460   00           DB 0
   \   000461   00           DB 0
   \   000462   18           DB 24
   \   000463   24           DB 36
   \   000464   20           DB 32
   \   000465   20           DB 32
   \   000466   F8           DB 248
   \   000467   20           DB 32
   \   000468   20           DB 32
   \   000469   20           DB 32
   \   00046A   20           DB 32
   \   00046B   20           DB 32
   \   00046C   20           DB 32
   \   00046D   70           DB 112
   \   00046E   00           DB 0
   \   00046F   00           DB 0
   \   000470   00           DB 0
   \   000471   00           DB 0
   \   000472   00           DB 0
   \   000473   00           DB 0
   \   000474   00           DB 0
   \   000475   00           DB 0
   \   000476   3A           DB 58
   \   000477   44           DB 68
   \   000478   44           DB 68
   \   000479   78           DB 120
   \   00047A   80           DB 128
   \   00047B   7C           DB 124
   \   00047C   82           DB 130
   \   00047D   82           DB 130
   \   00047E   7C           DB 124
   \   00047F   00           DB 0
   \   000480   00           DB 0
   \   000481   00           DB 0
   \   000482   C0           DB 192
   \   000483   40           DB 64
   \   000484   40           DB 64
   \   000485   40           DB 64
   \   000486   58           DB 88
   \   000487   64           DB 100
   \   000488   44           DB 68
   \   000489   44           DB 68
   \   00048A   44           DB 68
   \   00048B   44           DB 68
   \   00048C   44           DB 68
   \   00048D   EE           DB 238
   \   00048E   00           DB 0
   \   00048F   00           DB 0
   \   000490   00           DB 0
   \   000491   00           DB 0
   \   000492   10           DB 16
   \   000493   10           DB 16
   \   000494   00           DB 0
   \   000495   00           DB 0
   \   000496   30           DB 48
   \   000497   10           DB 16
   \   000498   10           DB 16
   \   000499   10           DB 16
   \   00049A   10           DB 16
   \   00049B   10           DB 16
   \   00049C   10           DB 16
   \   00049D   38           DB 56
   \   00049E   00           DB 0
   \   00049F   00           DB 0
   \   0004A0   00           DB 0
   \   0004A1   00           DB 0
   \   0004A2   10           DB 16
   \   0004A3   10           DB 16
   \   0004A4   00           DB 0
   \   0004A5   00           DB 0
   \   0004A6   30           DB 48
   \   0004A7   10           DB 16
   \   0004A8   10           DB 16
   \   0004A9   10           DB 16
   \   0004AA   10           DB 16
   \   0004AB   10           DB 16
   \   0004AC   10           DB 16
   \   0004AD   90           DB 144
   \   0004AE   60           DB 96
   \   0004AF   00           DB 0
   \   0004B0   00           DB 0
   \   0004B1   00           DB 0
   \   0004B2   C0           DB 192
   \   0004B3   40           DB 64
   \   0004B4   40           DB 64
   \   0004B5   40           DB 64
   \   0004B6   5C           DB 92
   \   0004B7   48           DB 72
   \   0004B8   50           DB 80
   \   0004B9   60           DB 96
   \   0004BA   50           DB 80
   \   0004BB   48           DB 72
   \   0004BC   44           DB 68
   \   0004BD   EE           DB 238
   \   0004BE   00           DB 0
   \   0004BF   00           DB 0
   \   0004C0   00           DB 0
   \   0004C1   00           DB 0
   \   0004C2   30           DB 48
   \   0004C3   10           DB 16
   \   0004C4   10           DB 16
   \   0004C5   10           DB 16
   \   0004C6   10           DB 16
   \   0004C7   11           DB 17
   \   0004C8   10           DB 16
   \   0004C9   10           DB 16
   \   0004CA   10           DB 16
   \   0004CB   10           DB 16
   \   0004CC   10           DB 16
   \   0004CD   39           DB 57
   \   0004CE   00           DB 0
   \   0004CF   00           DB 0
   \   0004D0   00           DB 0
   \   0004D1   00           DB 0
   \   0004D2   00           DB 0
   \   0004D3   00           DB 0
   \   0004D4   00           DB 0
   \   0004D5   00           DB 0
   \   0004D6   AC           DB 172
   \   0004D7   D2           DB 210
   \   0004D8   92           DB 146
   \   0004D9   92           DB 146
   \   0004DA   92           DB 146
   \   0004DB   92           DB 146
   \   0004DC   92           DB 146
   \   0004DD   D6           DB 214
   \   0004DE   00           DB 0
   \   0004DF   00           DB 0
   \   0004E0   00           DB 0
   \   0004E1   00           DB 0
   \   0004E2   00           DB 0
   \   0004E3   00           DB 0
   \   0004E4   00           DB 0
   \   0004E5   00           DB 0
   \   0004E6   58           DB 88
   \   0004E7   E4           DB 228
   \   0004E8   44           DB 68
   \   0004E9   44           DB 68
   \   0004EA   44           DB 68
   \   0004EB   44           DB 68
   \   0004EC   44           DB 68
   \   0004ED   EE           DB 238
   \   0004EE   00           DB 0
   \   0004EF   00           DB 0
   \   0004F0   00           DB 0
   \   0004F1   00           DB 0
   \   0004F2   00           DB 0
   \   0004F3   00           DB 0
   \   0004F4   00           DB 0
   \   0004F5   00           DB 0
   \   0004F6   38           DB 56
   \   0004F7   44           DB 68
   \   0004F8   82           DB 130
   \   0004F9   82           DB 130
   \   0004FA   82           DB 130
   \   0004FB   82           DB 130
   \   0004FC   44           DB 68
   \   0004FD   38           DB 56
   \   0004FE   00           DB 0
   \   0004FF   00           DB 0
   \   000500   00           DB 0
   \   000501   00           DB 0
   \   000502   00           DB 0
   \   000503   00           DB 0
   \   000504   00           DB 0
   \   000505   00           DB 0
   \   000506   D8           DB 216
   \   000507   64           DB 100
   \   000508   42           DB 66
   \   000509   42           DB 66
   \   00050A   42           DB 66
   \   00050B   64           DB 100
   \   00050C   58           DB 88
   \   00050D   40           DB 64
   \   00050E   E0           DB 224
   \   00050F   00           DB 0
   \   000510   00           DB 0
   \   000511   00           DB 0
   \   000512   00           DB 0
   \   000513   00           DB 0
   \   000514   00           DB 0
   \   000515   00           DB 0
   \   000516   36           DB 54
   \   000517   4C           DB 76
   \   000518   84           DB 132
   \   000519   84           DB 132
   \   00051A   84           DB 132
   \   00051B   4C           DB 76
   \   00051C   34           DB 52
   \   00051D   04           DB 4
   \   00051E   0E           DB 14
   \   00051F   00           DB 0
   \   000520   00           DB 0
   \   000521   00           DB 0
   \   000522   00           DB 0
   \   000523   00           DB 0
   \   000524   00           DB 0
   \   000525   00           DB 0
   \   000526   6C           DB 108
   \   000527   30           DB 48
   \   000528   20           DB 32
   \   000529   20           DB 32
   \   00052A   20           DB 32
   \   00052B   20           DB 32
   \   00052C   20           DB 32
   \   00052D   70           DB 112
   \   00052E   00           DB 0
   \   00052F   00           DB 0
   \   000530   00           DB 0
   \   000531   00           DB 0
   \   000532   00           DB 0
   \   000533   00           DB 0
   \   000534   00           DB 0
   \   000535   00           DB 0
   \   000536   78           DB 120
   \   000537   88           DB 136
   \   000538   84           DB 132
   \   000539   60           DB 96
   \   00053A   18           DB 24
   \   00053B   84           DB 132
   \   00053C   44           DB 68
   \   00053D   78           DB 120
   \   00053E   00           DB 0
   \   00053F   00           DB 0
   \   000540   00           DB 0
   \   000541   00           DB 0
   \   000542   00           DB 0
   \   000543   20           DB 32
   \   000544   20           DB 32
   \   000545   20           DB 32
   \   000546   F8           DB 248
   \   000547   20           DB 32
   \   000548   20           DB 32
   \   000549   20           DB 32
   \   00054A   20           DB 32
   \   00054B   20           DB 32
   \   00054C   24           DB 36
   \   00054D   18           DB 24
   \   00054E   00           DB 0
   \   00054F   00           DB 0
   \   000550   00           DB 0
   \   000551   00           DB 0
   \   000552   00           DB 0
   \   000553   00           DB 0
   \   000554   00           DB 0
   \   000555   00           DB 0
   \   000556   C6           DB 198
   \   000557   42           DB 66
   \   000558   42           DB 66
   \   000559   42           DB 66
   \   00055A   42           DB 66
   \   00055B   42           DB 66
   \   00055C   46           DB 70
   \   00055D   3A           DB 58
   \   00055E   00           DB 0
   \   00055F   00           DB 0
   \   000560   00           DB 0
   \   000561   00           DB 0
   \   000562   00           DB 0
   \   000563   00           DB 0
   \   000564   00           DB 0
   \   000565   00           DB 0
   \   000566   EE           DB 238
   \   000567   44           DB 68
   \   000568   44           DB 68
   \   000569   28           DB 40
   \   00056A   28           DB 40
   \   00056B   28           DB 40
   \   00056C   10           DB 16
   \   00056D   10           DB 16
   \   00056E   00           DB 0
   \   00056F   00           DB 0
   \   000570   00           DB 0
   \   000571   00           DB 0
   \   000572   00           DB 0
   \   000573   00           DB 0
   \   000574   00           DB 0
   \   000575   00           DB 0
   \   000576   EE           DB 238
   \   000577   44           DB 68
   \   000578   44           DB 68
   \   000579   54           DB 84
   \   00057A   54           DB 84
   \   00057B   28           DB 40
   \   00057C   28           DB 40
   \   00057D   28           DB 40
   \   00057E   00           DB 0
   \   00057F   00           DB 0
   \   000580   00           DB 0
   \   000581   00           DB 0
   \   000582   00           DB 0
   \   000583   00           DB 0
   \   000584   00           DB 0
   \   000585   00           DB 0
   \   000586   EE           DB 238
   \   000587   44           DB 68
   \   000588   28           DB 40
   \   000589   10           DB 16
   \   00058A   10           DB 16
   \   00058B   28           DB 40
   \   00058C   44           DB 68
   \   00058D   EE           DB 238
   \   00058E   00           DB 0
   \   00058F   00           DB 0
   \   000590   00           DB 0
   \   000591   00           DB 0
   \   000592   00           DB 0
   \   000593   00           DB 0
   \   000594   00           DB 0
   \   000595   00           DB 0
   \   000596   EE           DB 238
   \   000597   44           DB 68
   \   000598   44           DB 68
   \   000599   28           DB 40
   \   00059A   28           DB 40
   \   00059B   10           DB 16
   \   00059C   10           DB 16
   \   00059D   A0           DB 160
   \   00059E   C0           DB 192
   \   00059F   00           DB 0
   \   0005A0   00           DB 0
   \   0005A1   00           DB 0
   \   0005A2   00           DB 0
   \   0005A3   00           DB 0
   \   0005A4   00           DB 0
   \   0005A5   00           DB 0
   \   0005A6   7E           DB 126
   \   0005A7   44           DB 68
   \   0005A8   88           DB 136
   \   0005A9   10           DB 16
   \   0005AA   20           DB 32
   \   0005AB   42           DB 66
   \   0005AC   84           DB 132
   \   0005AD   FC           DB 252
   \   0005AE   00           DB 0
   \   0005AF   00           DB 0
   \   0005B0   00           DB 0
   \   0005B1   0C           DB 12
   \   0005B2   10           DB 16
   \   0005B3   10           DB 16
   \   0005B4   10           DB 16
   \   0005B5   10           DB 16
   \   0005B6   10           DB 16
   \   0005B7   60           DB 96
   \   0005B8   10           DB 16
   \   0005B9   10           DB 16
   \   0005BA   10           DB 16
   \   0005BB   10           DB 16
   \   0005BC   10           DB 16
   \   0005BD   10           DB 16
   \   0005BE   0C           DB 12
   \   0005BF   00           DB 0
   \   0005C0   00           DB 0
   \   0005C1   10           DB 16
   \   0005C2   10           DB 16
   \   0005C3   10           DB 16
   \   0005C4   10           DB 16
   \   0005C5   10           DB 16
   \   0005C6   10           DB 16
   \   0005C7   10           DB 16
   \   0005C8   10           DB 16
   \   0005C9   10           DB 16
   \   0005CA   10           DB 16
   \   0005CB   10           DB 16
   \   0005CC   10           DB 16
   \   0005CD   10           DB 16
   \   0005CE   10           DB 16
   \   0005CF   00           DB 0
   \   0005D0   00           DB 0
   \   0005D1   C0           DB 192
   \   0005D2   20           DB 32
   \   0005D3   20           DB 32
   \   0005D4   20           DB 32
   \   0005D5   20           DB 32
   \   0005D6   20           DB 32
   \   0005D7   18           DB 24
   \   0005D8   20           DB 32
   \   0005D9   20           DB 32
   \   0005DA   20           DB 32
   \   0005DB   20           DB 32
   \   0005DC   20           DB 32
   \   0005DD   20           DB 32
   \   0005DE   C0           DB 192
   \   0005DF   00           DB 0
   \   0005E0   00           DB 0
   \   0005E1   00           DB 0
   \   0005E2   00           DB 0
   \   0005E3   00           DB 0
   \   0005E4   00           DB 0
   \   0005E5   00           DB 0
   \   0005E6   00           DB 0
   \   0005E7   72           DB 114
   \   0005E8   8C           DB 140
   \   0005E9   00           DB 0
   \   0005EA   00           DB 0
   \   0005EB   00           DB 0
   \   0005EC   00           DB 0
   \   0005ED   00           DB 0
   \   0005EE   00           DB 0
   \   0005EF   00           DB 0
      3          #include "font_chinese_h_16x16.h"

   \                                 In  segment XDATA_ROM_C, align 1
   \   static struct <unnamed> const __xdata_rom FontTable_Chinese_H_16X16[4]
   \                     FontTable_Chinese_H_16X16:
   \   000000   BDF1         DB 0BDH, 0F1H
   \   000002   01           DB 1
   \   000003   00           DB 0
   \   000004   01           DB 1
   \   000005   00           DB 0
   \   000006   02           DB 2
   \   000007   80           DB 128
   \   000008   04           DB 4
   \   000009   40           DB 64
   \   00000A   08           DB 8
   \   00000B   20           DB 32
   \   00000C   12           DB 18
   \   00000D   10           DB 16
   \   00000E   21           DB 33
   \   00000F   08           DB 8
   \   000010   C1           DB 193
   \   000011   06           DB 6
   \   000012   00           DB 0
   \   000013   00           DB 0
   \   000014   1F           DB 31
   \   000015   F0           DB 240
   \   000016   00           DB 0
   \   000017   10           DB 16
   \   000018   00           DB 0
   \   000019   20           DB 32
   \   00001A   00           DB 0
   \   00001B   20           DB 32
   \   00001C   00           DB 0
   \   00001D   40           DB 64
   \   00001E   00           DB 0
   \   00001F   80           DB 128
   \   000020   01           DB 1
   \   000021   00           DB 0
   \   000022   CCEC         DB 0CCH, 0ECH
   \   000024   00           DB 0
   \   000025   00           DB 0
   \   000026   3F           DB 63
   \   000027   F8           DB 248
   \   000028   01           DB 1
   \   000029   00           DB 0
   \   00002A   01           DB 1
   \   00002B   00           DB 0
   \   00002C   01           DB 1
   \   00002D   00           DB 0
   \   00002E   01           DB 1
   \   00002F   00           DB 0
   \   000030   FF           DB 255
   \   000031   FE           DB 254
   \   000032   01           DB 1
   \   000033   00           DB 0
   \   000034   02           DB 2
   \   000035   80           DB 128
   \   000036   02           DB 2
   \   000037   80           DB 128
   \   000038   04           DB 4
   \   000039   40           DB 64
   \   00003A   04           DB 4
   \   00003B   40           DB 64
   \   00003C   08           DB 8
   \   00003D   20           DB 32
   \   00003E   10           DB 16
   \   00003F   10           DB 16
   \   000040   20           DB 32
   \   000041   08           DB 8
   \   000042   C0           DB 192
   \   000043   06           DB 6
   \   000044   C6F8         DB 0C6H, 0F8H
   \   000046   10           DB 16
   \   000047   00           DB 0
   \   000048   10           DB 16
   \   000049   00           DB 0
   \   00004A   3F           DB 63
   \   00004B   FC           DB 252
   \   00004C   20           DB 32
   \   00004D   00           DB 0
   \   00004E   4F           DB 79
   \   00004F   F0           DB 240
   \   000050   80           DB 128
   \   000051   00           DB 0
   \   000052   3F           DB 63
   \   000053   F0           DB 240
   \   000054   00           DB 0
   \   000055   10           DB 16
   \   000056   00           DB 0
   \   000057   10           DB 16
   \   000058   00           DB 0
   \   000059   10           DB 16
   \   00005A   00           DB 0
   \   00005B   10           DB 16
   \   00005C   00           DB 0
   \   00005D   10           DB 16
   \   00005E   00           DB 0
   \   00005F   0A           DB 10
   \   000060   00           DB 0
   \   000061   0A           DB 10
   \   000062   00           DB 0
   \   000063   06           DB 6
   \   000064   00           DB 0
   \   000065   02           DB 2
   \   000066   CEC2         DB 0CEH, 0C2H
   \   000068   00           DB 0
   \   000069   00           DB 0
   \   00006A   23           DB 35
   \   00006B   F8           DB 248
   \   00006C   12           DB 18
   \   00006D   08           DB 8
   \   00006E   12           DB 18
   \   00006F   08           DB 8
   \   000070   83           DB 131
   \   000071   F8           DB 248
   \   000072   42           DB 66
   \   000073   08           DB 8
   \   000074   42           DB 66
   \   000075   08           DB 8
   \   000076   13           DB 19
   \   000077   F8           DB 248
   \   000078   10           DB 16
   \   000079   00           DB 0
   \   00007A   27           DB 39
   \   00007B   FC           DB 252
   \   00007C   E4           DB 228
   \   00007D   A4           DB 164
   \   00007E   24           DB 36
   \   00007F   A4           DB 164
   \   000080   24           DB 36
   \   000081   A4           DB 164
   \   000082   24           DB 36
   \   000083   A4           DB 164
   \   000084   2F           DB 47
   \   000085   FE           DB 254
   \   000086   00           DB 0
   \   000087   00           DB 0
      4          #include "hal_delay.h"
      5          
      6          /* Write a uint16 data to TFT. */
      7          #define HAL_TFT_WRITE_UINT16(val) do {    \
      8              halLcdSpiTxData((uint8)((val) >> 8)); \
      9              halLcdSpiTxData((uint8)(val));        \
     10          } while(0)
     11                            
     12          static void halTFTReset(void);   
     13          
     14          #if (defined LCD_TYPE) && (LCD_TYPE == LCD_TFT096)
     15          static void ST7735RInit(void);
     16          
     17          static void halTFTSetRegion(uint16 xs, uint16 ys, uint16 xe, uint16 ye);
     18          #define HAL_TFT_SET_REGION(xs, ys, xe, ye)  halTFTSetRegion(xs, ys, xe, ye)
     19          #endif
     20          
     21          #if (defined LCD_TYPE) && (LCD_TYPE == LCD_IPS096_T1)
     22          #define ST7735S_FLAG_MY     (1 << 7)
     23          #define ST7735S_FLAG_MX     (1 << 6)
     24          #define ST7735S_FLAG_MV     (1 << 5)
     25          #define ST7735S_FLAG_ML     (1 << 4)
     26          #define ST7735S_FLAG_RGB    (1 << 3)
     27          #define ST7735S_FLAG_MH     (1 << 2)
     28          
     29          #define ST7735S_MADCTL_RGB           (ST7735S_FLAG_RGB)
     30          #define ST7735S_MADCTL_MY_MV_RGB     (ST7735S_FLAG_MY | ST7735S_FLAG_MV | ST7735S_FLAG_RGB)
     31          #define ST7735S_MADCTL_MY_MX_RGB     (ST7735S_FLAG_MY | ST7735S_FLAG_MX | ST7735S_FLAG_RGB)
     32          #define ST7735S_MADCTL_MX_MV_ML_RGB  (ST7735S_FLAG_MX | ST7735S_FLAG_MV | ST7735S_FLAG_ML | ST7735S_FLAG_RGB)
     33          
     34          #define ST7735S_MADCTL  ST7735S_MADCTL_MX_MV_ML_RGB
     35          
     36          static void ST7735SInit(uint8 madctl);
     37          
     38          static void halTFTSetRegion(uint8 madctl, uint16 xs, uint16 ys, uint16 xe, uint16 ye);
     39          #define HAL_TFT_SET_REGION(xs, ys, xe, ye)  halTFTSetRegion(ST7735S_MADCTL, xs, ys, xe, ye)
     40          #endif
     41          
     42          
     43          static void halTFTSetPosition(uint16 x, uint16 y);
     44          static void halTFTDrawPixel(uint16 xs, uint16 ys, uint16 color);
     45          static void halTFTShowChar8x16(uint16 x, uint16 y, uint16 fontColor, uint16 backgroundColor, uint8 ch);
     46          static void halTFTShowChineseChar16x16(uint16 x, uint16 y, uint16 fontColor, uint16 backgroundColor, uint8 chL, uint8 chR);
     47          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     48          void halTFTInit(uint16 screenColor)
   \                     halTFTInit:
     49          {    
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV       A,#-0xa
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV       A,R2
   \   000006   FE           MOV       R6,A
   \   000007   EB           MOV       A,R3
   \   000008   FF           MOV       R7,A
     50              /* Init SPI-GPIO */
     51              halLcdSpiInit();
   \   000009                ; Setup parameters for call to function halLcdSpiInit
   \   000009   12....       LCALL     `??halLcdSpiInit::?relay`; Banked call to: halLcdSpiInit
     52              
     53          #if (defined LCD_TYPE) && (LCD_TYPE == LCD_TFT096)
     54              ST7735RInit();
     55          #elif (defined LCD_TYPE) && (LCD_TYPE == LCD_IPS096_T1)
     56              ST7735SInit(ST7735S_MADCTL);
   \   00000C                ; Setup parameters for call to function ST7735SInit
   \   00000C   7978         MOV       R1,#0x78
   \   00000E   12....       LCALL     `??ST7735SInit::?relay`; Banked call to: ST7735SInit
     57          #else
     58              #error "Unknow LCD_TYPE."
     59          #endif
     60              
     61              /* Setting */
     62              halTFTSetPosition(0, 0);
   \   000011                ; Setup parameters for call to function halTFTSetRegion
   \   000011   E4           CLR       A
   \   000012   F5..         MOV       ?V0,A
   \   000014   F5..         MOV       ?V1,A
   \   000016   78..         MOV       R0,#?V0
   \   000018   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   00001B   78..         MOV       R0,#?V0
   \   00001D   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000020   12....       LCALL     ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_33:
   \   000023   12....       LCALL     ?DEALLOC_XSTACK8
     63              halTFTSetScreen(screenColor);
   \   000026                ; Setup parameters for call to function halTFTSetScreen
   \   000026   EE           MOV       A,R6
   \   000027   FA           MOV       R2,A
   \   000028   EF           MOV       A,R7
   \   000029   FB           MOV       R3,A
   \   00002A   12....       LCALL     `??halTFTSetScreen::?relay`; Banked call to: halTFTSetScreen
     64          }
   \   00002D                REQUIRE ?Subroutine0
   \   00002D                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F02         MOV       R7,#0x2
   \   000002   02....       LJMP      ?BANKED_LEAVE_XDATA
     65          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   7C00         MOV       R4,#0x0
   \   000002   7D00         MOV       R5,#0x0
   \   000004   7A00         MOV       R2,#0x0
   \   000006                REQUIRE ??Subroutine20_0
   \   000006                ; // Fall through to label ??Subroutine20_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine20_0:
   \   000000   7B00         MOV       R3,#0x0
   \   000002                REQUIRE ??Subroutine21_0
   \   000002                ; // Fall through to label ??Subroutine21_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine21_0:
   \   000000   7978         MOV       R1,#0x78
   \   000002   12....       LCALL     `??halTFTSetRegion::?relay`; Banked call to: halTFTSetRegion
   \   000005   7404         MOV       A,#0x4
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     66          void halTFTSetScreen(uint16 pixelVal)
   \                     halTFTSetScreen:
     67          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV       A,#-0xa
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV       A,R2
   \   000006   FE           MOV       R6,A
   \   000007   EB           MOV       A,R3
   \   000008   FF           MOV       R7,A
     68              uint16 x, y;
     69              
     70              HAL_TFT_SET_REGION(0, HAL_TFT_Y_OFFSET, HAL_TFT_X-1, HAL_TFT_Y-1);
   \   000009                ; Setup parameters for call to function halTFTSetRegion
   \   000009   75..4F       MOV       ?V0,#0x4f
   \   00000C   75..00       MOV       ?V1,#0x0
   \   00000F   78..         MOV       R0,#?V0
   \   000011   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000014   75..9F       MOV       ?V0,#-0x61
   \   000017   78..         MOV       R0,#?V0
   \   000019   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   00001C   12....       LCALL     ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_34:
   \   00001F   12....       LCALL     ?DEALLOC_XSTACK8
     71              
     72              for (x = 0; x < HAL_TFT_X; x++)
   \   000022   75..A0       MOV       ?V1,#-0x60
     73                  for (y = HAL_TFT_Y_OFFSET; y < HAL_TFT_Y; y++) HAL_TFT_WRITE_UINT16(pixelVal);
   \                     ??halTFTSetScreen_0:
   \   000025   75..50       MOV       ?V0,#0x50
   \                     ??halTFTSetScreen_1:
   \   000028                ; Setup parameters for call to function halLcdSpiTxData
   \   000028   12....       LCALL     ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_37:
   \   00002B   15..         DEC       ?V0
   \   00002D   E5..         MOV       A,?V0
   \   00002F   70F7         JNZ       ??halTFTSetScreen_1
   \   000031   15..         DEC       ?V1
   \   000033   E5..         MOV       A,?V1
   \   000035   70EE         JNZ       ??halTFTSetScreen_0
     74          }
   \   000037   80..         SJMP      ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   EF           MOV       A,R7
   \   000001                REQUIRE ??Subroutine22_0
   \   000001                ; // Fall through to label ??Subroutine22_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine22_0:
   \   000000   F9           MOV       R1,A
   \   000001   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000004                ; Setup parameters for call to function halLcdSpiTxData
   \   000004                ; Setup parameters for call to function halLcdSpiTxData
   \   000004                ; Setup parameters for call to function halLcdSpiTxData
   \   000004   EE           MOV       A,R6
   \   000005   F9           MOV       R1,A
   \   000006   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000009   22           RET
     75          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     76          void halTFTShowX16(uint16 x, uint16 y, uint16 fontColor, uint16 backgroundColor, const uint8 *str)
   \                     halTFTShowX16:
     77          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V7
   \   000000   74F0         MOV       A,#-0x10
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 2
   \   000005   74FE         MOV       A,#-0x2
   \   000007   12....       LCALL     ?ALLOC_XSTACK8
   \   00000A   85..82       MOV       DPL,?XSP + 0
   \   00000D   85..83       MOV       DPH,?XSP + 1
   \   000010   EC           MOV       A,R4
   \   000011   F0           MOVX      @DPTR,A
   \   000012   A3           INC       DPTR
   \   000013   ED           MOV       A,R5
   \   000014   F0           MOVX      @DPTR,A
   \   000015   8A..         MOV       ?V2,R2
   \   000017   8B..         MOV       ?V3,R3
   \   000019   7416         MOV       A,#0x16
   \   00001B   12....       LCALL     ?XSTACK_DISP0_8
   \   00001E   12....       LCALL     ?Subroutine11 & 0xFFFF
     78              if (!str) return;
   \                     ??CrossCallReturnLabel_13:
   \   000021   7003         JNZ       $+5
   \   000023   02....       LJMP      ??halTFTShowX16_0 & 0xFFFF
     79              
     80              y += HAL_TFT_Y_OFFSET;
     81              const uint8 *ptext = str; // text
   \   000026   7412         MOV       A,#0x12
   \   000028   12....       LCALL     ?XSTACK_DISP0_8
   \   00002B   12....       LCALL     ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_15:
   \   00002E   7414         MOV       A,#0x14
   \   000030   12....       LCALL     ?XSTACK_DISP0_8
   \   000033   E0           MOVX      A,@DPTR
   \   000034   FE           MOV       R6,A
   \   000035   A3           INC       DPTR
   \   000036   E0           MOVX      A,@DPTR
   \   000037   FF           MOV       R7,A
   \   000038   802F         SJMP      ??halTFTShowX16_1
     82          
     83              /* Show text */
     84              while(*ptext != 0) {
     85                  /* ASCII Code: 0~127 */
     86                  if ((*ptext) < 128) {
     87                      /* End of line */
     88                      if((x + 8) > HAL_TFT_X) return;
     89                    
     90                      /* Show 8x16 ASCII Char. */
     91                      halTFTShowChar8x16(x, y, fontColor, backgroundColor, *ptext);
   \                     ??halTFTShowX16_2:
   \   00003A                ; Setup parameters for call to function halTFTShowChar8x16
   \   00003A   8E..         MOV       ?V6,R6
   \   00003C   8F..         MOV       ?V7,R7
   \   00003E   78..         MOV       R0,#?V6
   \   000040   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000043   78..         MOV       R0,#?V0
   \   000045   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000048   7404         MOV       A,#0x4
   \   00004A   12....       LCALL     ?XSTACK_DISP0_8
   \   00004D   12....       LCALL     ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_20:
   \   000050   12....       LCALL     `??halTFTShowChar8x16::?relay`; Banked call to: halTFTShowChar8x16
   \   000053   7404         MOV       A,#0x4
   \   000055   12....       LCALL     ?DEALLOC_XSTACK8
     92                      x += 8;
   \   000058   E5..         MOV       A,?V2
   \   00005A   2408         ADD       A,#0x8
   \   00005C   F5..         MOV       ?V2,A
   \   00005E   E4           CLR       A
   \   00005F   35..         ADDC      A,?V3
   \   000061   F5..         MOV       ?V3,A
     93                      
     94                      ptext++;
   \   000063   85....       MOV       ?V6,?V4
   \   000066   85....       MOV       ?V7,?V5
   \                     ??halTFTShowX16_1:
   \   000069   85..82       MOV       DPL,?V6
   \   00006C   85..83       MOV       DPH,?V7
   \   00006F   E0           MOVX      A,@DPTR
   \   000070   F9           MOV       R1,A
   \   000071   605B         JZ        ??halTFTShowX16_0
   \   000073   A3           INC       DPTR
   \   000074   8582..       MOV       ?V4,DPL
   \   000077   8583..       MOV       ?V5,DPH
   \   00007A   C3           CLR       C
   \   00007B   9480         SUBB      A,#-0x80
   \   00007D   E5..         MOV       A,?V2
   \   00007F   5009         JNC       ??halTFTShowX16_3
   \   000081   2408         ADD       A,#0x8
   \   000083   12....       LCALL     ?Subroutine16 & 0xFFFF
   \                     ??CrossCallReturnLabel_24:
   \   000086   40B2         JC        ??halTFTShowX16_2
   \   000088   8044         SJMP      ??halTFTShowX16_0
     95                  }
     96                  /* Chinese 16x16 characters */
     97                  else {
     98                      /* End of line */
     99                      if((x + 16) > HAL_TFT_X) return;
   \                     ??halTFTShowX16_3:
   \   00008A   2410         ADD       A,#0x10
   \   00008C   12....       LCALL     ?Subroutine16 & 0xFFFF
   \                     ??CrossCallReturnLabel_25:
   \   00008F   503D         JNC       ??halTFTShowX16_0
    100                      
    101                      halTFTShowChineseChar16x16(x, y, fontColor, backgroundColor, *ptext, *(ptext + 1));
   \   000091                ; Setup parameters for call to function halTFTShowChineseChar16x16
   \   000091   E0           MOVX      A,@DPTR
   \   000092   F5..         MOV       ?V4,A
   \   000094   78..         MOV       R0,#?V4
   \   000096   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   000099   8E..         MOV       ?V4,R6
   \   00009B   8F..         MOV       ?V5,R7
   \   00009D   78..         MOV       R0,#?V4
   \   00009F   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0000A2   78..         MOV       R0,#?V0
   \   0000A4   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0000A7   7405         MOV       A,#0x5
   \   0000A9   12....       LCALL     ?XSTACK_DISP0_8
   \   0000AC   12....       LCALL     ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_21:
   \   0000AF   12....       LCALL     `??halTFTShowChineseChar16x16::?relay`; Banked call to: halTFTShowChineseChar16x16
   \   0000B2   7405         MOV       A,#0x5
   \   0000B4   12....       LCALL     ?DEALLOC_XSTACK8
    102                      
    103                      x += 16;
   \   0000B7   E5..         MOV       A,?V2
   \   0000B9   2410         ADD       A,#0x10
   \   0000BB   F5..         MOV       ?V2,A
   \   0000BD   E4           CLR       A
   \   0000BE   35..         ADDC      A,?V3
   \   0000C0   F5..         MOV       ?V3,A
    104                      
    105                      ptext += 2;
   \   0000C2   E5..         MOV       A,?V6
   \   0000C4   2402         ADD       A,#0x2
   \   0000C6   F5..         MOV       ?V6,A
   \   0000C8   509F         JNC       ??halTFTShowX16_1
   \   0000CA   05..         INC       ?V7
   \   0000CC   809B         SJMP      ??halTFTShowX16_1
    106                  }
    107              } /* while(*ptext != 0) */
    108          }
   \                     ??halTFTShowX16_0:
   \   0000CE   02....       LJMP      ?Subroutine1 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine16:
   \   000000   FA           MOV       R2,A
   \   000001   E4           CLR       A
   \   000002   35..         ADDC      A,?V3
   \   000004   FB           MOV       R3,A
   \   000005   C3           CLR       C
   \   000006   EA           MOV       A,R2
   \   000007   94A1         SUBB      A,#-0x5f
   \   000009   EB           MOV       A,R3
   \   00000A   9400         SUBB      A,#0x0
   \   00000C   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine14:
   \   000000   E0           MOVX      A,@DPTR
   \   000001   FC           MOV       R4,A
   \   000002   A3           INC       DPTR
   \   000003   E0           MOVX      A,@DPTR
   \   000004   FD           MOV       R5,A
   \   000005   AA..         MOV       R2,?V2
   \   000007   AB..         MOV       R3,?V3
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine11:
   \   000000   E0           MOVX      A,@DPTR
   \   000001   F5..         MOV       ?V6,A
   \   000003   A3           INC       DPTR
   \   000004   E0           MOVX      A,@DPTR
   \   000005   F5..         MOV       ?V7,A
   \   000007   E5..         MOV       A,?V6
   \   000009   45..         ORL       A,?V7
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine12:
   \   000000   E0           MOVX      A,@DPTR
   \   000001   F5..         MOV       ?V0,A
   \   000003   A3           INC       DPTR
   \   000004   E0           MOVX      A,@DPTR
   \   000005   F5..         MOV       ?V1,A
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7402         MOV       A,#0x2
   \   000002                REQUIRE ??Subroutine24_0
   \   000002                ; // Fall through to label ??Subroutine24_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine24_0:
   \   000000   12....       LCALL     ?DEALLOC_XSTACK8
   \   000003   7F08         MOV       R7,#0x8
   \   000005   02....       LJMP      ?BANKED_LEAVE_XDATA
    109          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    110          void halTFTShowPicture(uint8 x, uint8 y, uint8 picWidth, uint8 picHeight, const uint8 *pic)
   \                     halTFTShowPicture:
    111          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V7
   \   000000   74F0         MOV       A,#-0x10
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 2
   \   000005   74FE         MOV       A,#-0x2
   \   000007   12....       LCALL     ?ALLOC_XSTACK8
   \   00000A   89..         MOV       ?V3,R1
   \   00000C   8A..         MOV       ?V2,R2
    112              uint8 picL, picH;
    113              const uint8 *pPic = pic;
    114              uint16 picSize = (uint16)picWidth * picHeight;
   \   00000E   EB           MOV       A,R3
   \   00000F   8CF0         MOV       B,R4
   \   000011   A4           MUL       AB
   \   000012   85..82       MOV       DPL,?XSP + 0
   \   000015   85..83       MOV       DPH,?XSP + 1
   \   000018   F0           MOVX      @DPTR,A
   \   000019   A3           INC       DPTR
   \   00001A   E5F0         MOV       A,B
   \   00001C   F0           MOVX      @DPTR,A
   \   00001D   7412         MOV       A,#0x12
   \   00001F   12....       LCALL     ?XSTACK_DISP0_8
   \   000022   12....       LCALL     ?Subroutine11 & 0xFFFF
    115          
    116              y += HAL_TFT_Y_OFFSET;
    117              
    118              if (!pPic || (x + picWidth)  > HAL_TFT_X ||  (y + picHeight) > HAL_TFT_Y) return;
   \                     ??CrossCallReturnLabel_14:
   \   000025   6027         JZ        ??halTFTShowPicture_0
   \   000027   E9           MOV       A,R1
   \   000028   2B           ADD       A,R3
   \   000029   FA           MOV       R2,A
   \   00002A   E4           CLR       A
   \   00002B   3400         ADDC      A,#0x0
   \   00002D   FB           MOV       R3,A
   \   00002E   EA           MOV       A,R2
   \   00002F   94A1         SUBB      A,#-0x5f
   \   000031   EB           MOV       A,R3
   \   000032   9400         SUBB      A,#0x0
   \   000034   C3           CLR       C
   \   000035   65D0         XRL       A,PSW
   \   000037   33           RLC       A
   \   000038   507A         JNC       ??halTFTShowPicture_1
   \   00003A   E5..         MOV       A,?V2
   \   00003C   2C           ADD       A,R4
   \   00003D   F8           MOV       R0,A
   \   00003E   E4           CLR       A
   \   00003F   3400         ADDC      A,#0x0
   \   000041   F9           MOV       R1,A
   \   000042   E8           MOV       A,R0
   \   000043   9451         SUBB      A,#0x51
   \   000045   E9           MOV       A,R1
   \   000046   9400         SUBB      A,#0x0
   \   000048   C3           CLR       C
   \   000049   65D0         XRL       A,PSW
   \   00004B   33           RLC       A
   \   00004C   4002         JC        ??halTFTShowPicture_2
   \                     ??halTFTShowPicture_0:
   \   00004E   8064         SJMP      ??halTFTShowPicture_1
    119          
    120              /* Set region */
    121              HAL_TFT_SET_REGION(x, y, x + picWidth - 1, y + picHeight - 1);
   \                     ??halTFTShowPicture_2:
   \   000050                ; Setup parameters for call to function halTFTSetRegion
   \   000050   E8           MOV       A,R0
   \   000051   24FF         ADD       A,#-0x1
   \   000053   F5..         MOV       ?V4,A
   \   000055   E9           MOV       A,R1
   \   000056   34FF         ADDC      A,#-0x1
   \   000058   F5..         MOV       ?V5,A
   \   00005A   78..         MOV       R0,#?V4
   \   00005C   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   00005F   EA           MOV       A,R2
   \   000060   24FF         ADD       A,#-0x1
   \   000062   F5..         MOV       ?V4,A
   \   000064   EB           MOV       A,R3
   \   000065   34FF         ADDC      A,#-0x1
   \   000067   F5..         MOV       ?V5,A
   \   000069   78..         MOV       R0,#?V4
   \   00006B   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   00006E   AC..         MOV       R4,?V2
   \   000070   7D00         MOV       R5,#0x0
   \   000072   AA..         MOV       R2,?V3
   \   000074   12....       LCALL     ??Subroutine20_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_35:
   \   000077   12....       LCALL     ?DEALLOC_XSTACK8
    122          
    123              /* Show Picture */
    124              for (uint16 i = 0; i < picSize; i++) {  
   \   00007A   7E00         MOV       R6,#0x0
   \   00007C   7F00         MOV       R7,#0x0
   \   00007E   8022         SJMP      ??halTFTShowPicture_3
    125              #ifdef HAL_TFT_PIC_MSB
    126                  picH = *(pPic + i*2);     // High 8Bit
    127                  picL = *(pPic + i*2 + 1); // Low 8Bit
    128              #else
    129                  picL = *(pPic + i*2);     // Low 8Bit
   \                     ??halTFTShowPicture_4:
   \   000080   EE           MOV       A,R6
   \   000081   F8           MOV       R0,A
   \   000082   EF           MOV       A,R7
   \   000083   F9           MOV       R1,A
   \   000084   E8           MOV       A,R0
   \   000085   28           ADD       A,R0
   \   000086   F8           MOV       R0,A
   \   000087   E9           MOV       A,R1
   \   000088   33           RLC       A
   \   000089   F9           MOV       R1,A
   \   00008A   E5..         MOV       A,?V6
   \   00008C   28           ADD       A,R0
   \   00008D   F582         MOV       DPL,A
   \   00008F   E5..         MOV       A,?V7
   \   000091   39           ADDC      A,R1
   \   000092   F583         MOV       DPH,A
   \   000094   E0           MOVX      A,@DPTR
   \   000095   F5..         MOV       ?V4,A
    130                  picH = *(pPic + i*2 + 1); // High 8Bit
    131              #endif
    132                    
    133                  HAL_TFT_WRITE_UINT16((uint16)picH<<8 | picL);                       
   \   000097                ; Setup parameters for call to function halLcdSpiTxData
   \   000097   A3           INC       DPTR
   \   000098   E0           MOVX      A,@DPTR
   \   000099   F9           MOV       R1,A
   \   00009A   12....       LCALL     ?Subroutine8 & 0xFFFF
    134              }
   \                     ??CrossCallReturnLabel_7:
   \   00009D   0E           INC       R6
   \   00009E   EE           MOV       A,R6
   \   00009F   7001         JNZ       ??halTFTShowPicture_3
   \   0000A1   0F           INC       R7
   \                     ??halTFTShowPicture_3:
   \   0000A2   85..82       MOV       DPL,?XSP + 0
   \   0000A5   85..83       MOV       DPH,?XSP + 1
   \   0000A8   E0           MOVX      A,@DPTR
   \   0000A9   F8           MOV       R0,A
   \   0000AA   A3           INC       DPTR
   \   0000AB   E0           MOVX      A,@DPTR
   \   0000AC   F9           MOV       R1,A
   \   0000AD   C3           CLR       C
   \   0000AE   EE           MOV       A,R6
   \   0000AF   98           SUBB      A,R0
   \   0000B0   EF           MOV       A,R7
   \   0000B1   99           SUBB      A,R1
   \   0000B2   40CC         JC        ??halTFTShowPicture_4
    135          }
   \                     ??halTFTShowPicture_1:
   \   0000B4   02....       LJMP      ?Subroutine1 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000003                ; Setup parameters for call to function halLcdSpiTxData
   \   000003                ; Setup parameters for call to function halLcdSpiTxData
   \   000003   A9..         MOV       R1,?V4
   \   000005   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000008   22           RET
    136          
    137          static void halTFTReset(void)
    138          {
    139              SPI_GPIO_SET(HAL_LCD_SPI_RST_PORT, HAL_LCD_SPI_RST_PIN);
    140              delayMs(SYSCLK_32MHZ, 100);
    141              
    142              SPI_GPIO_CLEAR(HAL_LCD_SPI_RST_PORT, HAL_LCD_SPI_RST_PIN);
    143              delayMs(SYSCLK_32MHZ, 100);
    144              
    145              SPI_GPIO_SET(HAL_LCD_SPI_RST_PORT, HAL_LCD_SPI_RST_PIN);
    146              delayMs(SYSCLK_32MHZ, 100);
    147          }
    148          
    149          #if (defined LCD_TYPE) && (LCD_TYPE == LCD_TFT096)
    150          static void ST7735RInit(void)
    151          {
    152              /* Reset TFT */
    153              halTFTReset();
    154              
    155              /* Sleep Exit */
    156              halLcdSpiTxCmd(0x11);
    157              delayMs(SYSCLK_32MHZ, 120);
    158              
    159              /* Frame Rate */
    160              halLcdSpiTxCmd(0xB1); 
    161              halLcdSpiTxData(0x01); 
    162              halLcdSpiTxData(0x2C); 
    163              halLcdSpiTxData(0x2D); 
    164          
    165              halLcdSpiTxCmd(0xB2); 
    166              halLcdSpiTxData(0x01);
    167              halLcdSpiTxData(0x2C);
    168              halLcdSpiTxData(0x2D);
    169          
    170              halLcdSpiTxCmd(0xB3);
    171              halLcdSpiTxData(0x01);
    172              halLcdSpiTxData(0x2C);
    173              halLcdSpiTxData(0x2D);
    174              halLcdSpiTxData(0x01);
    175              halLcdSpiTxData(0x2C);
    176              halLcdSpiTxData(0x2D);
    177              
    178              halLcdSpiTxCmd(0xB4);
    179              halLcdSpiTxData(0x07); 
    180              
    181              /* Power Sequence */
    182              halLcdSpiTxCmd(0xC0); 
    183              halLcdSpiTxData(0xA2);
    184              halLcdSpiTxData(0x02);
    185              halLcdSpiTxData(0x84);
    186              halLcdSpiTxData(0xC1);
    187              halLcdSpiTxData(0xC5);
    188          
    189              halLcdSpiTxCmd(0xC2); 
    190              halLcdSpiTxData(0x0A); 
    191              halLcdSpiTxData(0x00); 
    192          
    193              halLcdSpiTxCmd(0xC3); 
    194              halLcdSpiTxData(0x8A);
    195              halLcdSpiTxData(0x2A);
    196              halLcdSpiTxData(0xC4);
    197              halLcdSpiTxData(0x8A);
    198              halLcdSpiTxData(0xEE);
    199              
    200              halLcdSpiTxCmd(0xC5);
    201              halLcdSpiTxData(0x0E); 
    202              
    203              /* MX, MY, RGB mode */
    204              halLcdSpiTxCmd(0x36);
    205              halLcdSpiTxData(0xC8); 
    206              
    207              /* Gamma Sequence */
    208              halLcdSpiTxCmd(0xe0); 
    209              halLcdSpiTxData(0x0f); 
    210              halLcdSpiTxData(0x1a); 
    211              halLcdSpiTxData(0x0f); 
    212              halLcdSpiTxData(0x18); 
    213              halLcdSpiTxData(0x2f); 
    214              halLcdSpiTxData(0x28); 
    215              halLcdSpiTxData(0x20); 
    216              halLcdSpiTxData(0x22); 
    217              halLcdSpiTxData(0x1f); 
    218              halLcdSpiTxData(0x1b); 
    219              halLcdSpiTxData(0x23);
    220              halLcdSpiTxData(0x37); 
    221              halLcdSpiTxData(0x00); 
    222              halLcdSpiTxData(0x07); 
    223              halLcdSpiTxData(0x02); 
    224              halLcdSpiTxData(0x10);
    225          
    226              halLcdSpiTxCmd(0xe1); 
    227              halLcdSpiTxData(0x0f); 
    228              halLcdSpiTxData(0x1b);
    229              halLcdSpiTxData(0x0f);
    230              halLcdSpiTxData(0x17);
    231              halLcdSpiTxData(0x33);
    232              halLcdSpiTxData(0x2c);
    233              halLcdSpiTxData(0x29);
    234              halLcdSpiTxData(0x2e);
    235              halLcdSpiTxData(0x30);
    236              halLcdSpiTxData(0x30);
    237              halLcdSpiTxData(0x39);
    238              halLcdSpiTxData(0x3f);
    239              halLcdSpiTxData(0x00);
    240              halLcdSpiTxData(0x07);
    241              halLcdSpiTxData(0x03);
    242              halLcdSpiTxData(0x10);
    243              
    244              halLcdSpiTxCmd(0x2a);
    245              halLcdSpiTxData(0x00);
    246              halLcdSpiTxData(0x00);
    247              halLcdSpiTxData(0x00);
    248              halLcdSpiTxData(0x7f);
    249          
    250              halLcdSpiTxCmd(0x2b);
    251              halLcdSpiTxData(0x00);
    252              halLcdSpiTxData(0x00);
    253              halLcdSpiTxData(0x00);
    254              halLcdSpiTxData(0x9f);
    255              
    256              /* Enable test command */
    257              halLcdSpiTxCmd(0xF0);  
    258              halLcdSpiTxData(0x01); 
    259              
    260              /* Disable ram power save mode */
    261              halLcdSpiTxCmd(0xF6);  
    262              halLcdSpiTxData(0x00); 
    263              
    264              /* 65k mode */
    265              halLcdSpiTxCmd(0x3A);
    266              halLcdSpiTxData(0x05); 
    267              
    268              /* Display on */
    269              halLcdSpiTxCmd(0x29);
    270          }
    271          #endif
    272          
    273          #if (defined LCD_TYPE) && (LCD_TYPE == LCD_IPS096_T1)

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    274          static void ST7735SInit(uint8 madctl)
   \                     ST7735SInit:
    275          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV       A,R1
   \   000006   FE           MOV       R6,A
    276              /* Reset TFT */
    277              halTFTReset();
   \   000007   D290         SETB      0x90.0
   \   000009                ; Setup parameters for call to function delayMs
   \   000009   7A64         MOV       R2,#0x64
   \   00000B   7B00         MOV       R3,#0x0
   \   00000D   7901         MOV       R1,#0x1
   \   00000F   12....       LCALL     `??delayMs::?relay`; Banked call to: delayMs
   \   000012   C290         CLR       0x90.0
   \   000014                ; Setup parameters for call to function delayMs
   \   000014   7A64         MOV       R2,#0x64
   \   000016   7B00         MOV       R3,#0x0
   \   000018   7901         MOV       R1,#0x1
   \   00001A   12....       LCALL     `??delayMs::?relay`; Banked call to: delayMs
   \   00001D   D290         SETB      0x90.0
   \   00001F                ; Setup parameters for call to function delayMs
   \   00001F   7A64         MOV       R2,#0x64
   \   000021   7B00         MOV       R3,#0x0
   \   000023   7901         MOV       R1,#0x1
   \   000025   12....       LCALL     `??delayMs::?relay`; Banked call to: delayMs
    278          
    279              halLcdSpiTxCmd(0x11);
   \   000028                ; Setup parameters for call to function halLcdSpiTxCmd
   \   000028   7911         MOV       R1,#0x11
   \   00002A   12....       LCALL     `??halLcdSpiTxCmd::?relay`; Banked call to: halLcdSpiTxCmd
    280              delayMs(SYSCLK_32MHZ, 120);
   \   00002D                ; Setup parameters for call to function delayMs
   \   00002D   7A78         MOV       R2,#0x78
   \   00002F   7B00         MOV       R3,#0x0
   \   000031   7901         MOV       R1,#0x1
   \   000033   12....       LCALL     `??delayMs::?relay`; Banked call to: delayMs
    281              
    282              halLcdSpiTxCmd(0xB1);
   \   000036                ; Setup parameters for call to function halLcdSpiTxCmd
   \   000036   79B1         MOV       R1,#-0x4f
   \   000038   12....       LCALL     ?Subroutine2 & 0xFFFF
    283              halLcdSpiTxData(0x05);
    284              halLcdSpiTxData(0x3C);
    285              halLcdSpiTxData(0x3C);
    286          
    287              halLcdSpiTxCmd(0xB2);
   \                     ??CrossCallReturnLabel_40:
   \   00003B                ; Setup parameters for call to function halLcdSpiTxCmd
   \   00003B   79B2         MOV       R1,#-0x4e
   \   00003D   12....       LCALL     ?Subroutine2 & 0xFFFF
    288              halLcdSpiTxData(0x05);
    289              halLcdSpiTxData(0x3C);
    290              halLcdSpiTxData(0x3C);
    291          
    292              halLcdSpiTxCmd(0xB3);
   \                     ??CrossCallReturnLabel_41:
   \   000040                ; Setup parameters for call to function halLcdSpiTxCmd
   \   000040   79B3         MOV       R1,#-0x4d
   \   000042   12....       LCALL     ?Subroutine2 & 0xFFFF
    293              halLcdSpiTxData(0x05);
    294              halLcdSpiTxData(0x3C);
    295              halLcdSpiTxData(0x3C);
    296              halLcdSpiTxData(0x05);
   \                     ??CrossCallReturnLabel_42:
   \   000045                ; Setup parameters for call to function halLcdSpiTxData
   \   000045   12....       LCALL     ??Subroutine23_0 & 0xFFFF
    297              halLcdSpiTxData(0x3C);
    298              halLcdSpiTxData(0x3C);
    299          
    300              halLcdSpiTxCmd(0xB4);
   \                     ??CrossCallReturnLabel_43:
   \   000048                ; Setup parameters for call to function halLcdSpiTxCmd
   \   000048   79B4         MOV       R1,#-0x4c
   \   00004A   12....       LCALL     `??halLcdSpiTxCmd::?relay`; Banked call to: halLcdSpiTxCmd
    301              halLcdSpiTxData(0x03);
   \   00004D                ; Setup parameters for call to function halLcdSpiTxData
   \   00004D   7903         MOV       R1,#0x3
   \   00004F   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
    302          
    303              halLcdSpiTxCmd(0xC0);
   \   000052                ; Setup parameters for call to function halLcdSpiTxCmd
   \   000052   79C0         MOV       R1,#-0x40
   \   000054   12....       LCALL     `??halLcdSpiTxCmd::?relay`; Banked call to: halLcdSpiTxCmd
    304              halLcdSpiTxData(0x0E);
   \   000057                ; Setup parameters for call to function halLcdSpiTxData
   \   000057   790E         MOV       R1,#0xe
   \   000059   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
    305              halLcdSpiTxData(0x0E);
   \   00005C                ; Setup parameters for call to function halLcdSpiTxData
   \   00005C   790E         MOV       R1,#0xe
   \   00005E   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
    306              halLcdSpiTxData(0x04);
   \   000061                ; Setup parameters for call to function halLcdSpiTxData
   \   000061   7904         MOV       R1,#0x4
   \   000063   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
    307          
    308              halLcdSpiTxCmd(0xC1);
   \   000066                ; Setup parameters for call to function halLcdSpiTxCmd
   \   000066   79C1         MOV       R1,#-0x3f
   \   000068   12....       LCALL     `??halLcdSpiTxCmd::?relay`; Banked call to: halLcdSpiTxCmd
    309              halLcdSpiTxData(0xC5);
   \   00006B                ; Setup parameters for call to function halLcdSpiTxData
   \   00006B   79C5         MOV       R1,#-0x3b
   \   00006D   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
    310          
    311              halLcdSpiTxCmd(0xC2);
   \   000070                ; Setup parameters for call to function halLcdSpiTxCmd
   \   000070   79C2         MOV       R1,#-0x3e
   \   000072   12....       LCALL     `??halLcdSpiTxCmd::?relay`; Banked call to: halLcdSpiTxCmd
    312              halLcdSpiTxData(0x0D);
   \   000075                ; Setup parameters for call to function halLcdSpiTxData
   \   000075   790D         MOV       R1,#0xd
   \   000077   12....       LCALL     ?Subroutine19 & 0xFFFF
    313              halLcdSpiTxData(0x00);
    314          
    315              halLcdSpiTxCmd(0xC3);
   \                     ??CrossCallReturnLabel_31:
   \   00007A                ; Setup parameters for call to function halLcdSpiTxCmd
   \   00007A   79C3         MOV       R1,#-0x3d
   \   00007C   12....       LCALL     ?Subroutine18 & 0xFFFF
    316              halLcdSpiTxData(0x8D);
    317              halLcdSpiTxData(0x2A);
   \                     ??CrossCallReturnLabel_29:
   \   00007F                ; Setup parameters for call to function halLcdSpiTxData
   \   00007F   792A         MOV       R1,#0x2a
   \   000081   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
    318          
    319              halLcdSpiTxCmd(0xC4);
   \   000084                ; Setup parameters for call to function halLcdSpiTxCmd
   \   000084   79C4         MOV       R1,#-0x3c
   \   000086   12....       LCALL     ?Subroutine18 & 0xFFFF
    320              halLcdSpiTxData(0x8D);
    321              halLcdSpiTxData(0xEE);
   \                     ??CrossCallReturnLabel_30:
   \   000089                ; Setup parameters for call to function halLcdSpiTxData
   \   000089   79EE         MOV       R1,#-0x12
   \   00008B   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
    322          
    323              halLcdSpiTxCmd(0xC5);
   \   00008E                ; Setup parameters for call to function halLcdSpiTxCmd
   \   00008E   79C5         MOV       R1,#-0x3b
   \   000090   12....       LCALL     `??halLcdSpiTxCmd::?relay`; Banked call to: halLcdSpiTxCmd
    324              halLcdSpiTxData(0x06);
   \   000093                ; Setup parameters for call to function halLcdSpiTxData
   \   000093   7906         MOV       R1,#0x6
   \   000095   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
    325          
    326              halLcdSpiTxCmd(0x36);
   \   000098                ; Setup parameters for call to function halLcdSpiTxCmd
   \   000098   7936         MOV       R1,#0x36
   \   00009A   12....       LCALL     `??halLcdSpiTxCmd::?relay`; Banked call to: halLcdSpiTxCmd
    327              halLcdSpiTxData(madctl);
   \   00009D                ; Setup parameters for call to function halLcdSpiTxData
   \   00009D   EE           MOV       A,R6
   \   00009E   F9           MOV       R1,A
   \   00009F   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
    328          
    329              halLcdSpiTxCmd(0x3A);
   \   0000A2                ; Setup parameters for call to function halLcdSpiTxCmd
   \   0000A2   793A         MOV       R1,#0x3a
   \   0000A4   12....       LCALL     `??halLcdSpiTxCmd::?relay`; Banked call to: halLcdSpiTxCmd
    330              halLcdSpiTxData(0x55);
   \   0000A7                ; Setup parameters for call to function halLcdSpiTxData
   \   0000A7   7955         MOV       R1,#0x55
   \   0000A9   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
    331                  
    332              halLcdSpiTxCmd(0xE0);
   \   0000AC                ; Setup parameters for call to function halLcdSpiTxCmd
   \   0000AC   79E0         MOV       R1,#-0x20
   \   0000AE   12....       LCALL     `??halLcdSpiTxCmd::?relay`; Banked call to: halLcdSpiTxCmd
    333              halLcdSpiTxData(0x0B);
   \   0000B1                ; Setup parameters for call to function halLcdSpiTxData
   \   0000B1   790B         MOV       R1,#0xb
   \   0000B3   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
    334              halLcdSpiTxData(0x17);
   \   0000B6                ; Setup parameters for call to function halLcdSpiTxData
   \   0000B6   7917         MOV       R1,#0x17
   \   0000B8   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
    335              halLcdSpiTxData(0x0A);
   \   0000BB                ; Setup parameters for call to function halLcdSpiTxData
   \   0000BB   790A         MOV       R1,#0xa
   \   0000BD   12....       LCALL     ?Subroutine9 & 0xFFFF
    336              halLcdSpiTxData(0x0D);
    337              halLcdSpiTxData(0x1A);
   \                     ??CrossCallReturnLabel_9:
   \   0000C0                ; Setup parameters for call to function halLcdSpiTxData
   \   0000C0   791A         MOV       R1,#0x1a
   \   0000C2   12....       LCALL     ?Subroutine6 & 0xFFFF
    338              halLcdSpiTxData(0x19);
    339              halLcdSpiTxData(0x16);
   \                     ??CrossCallReturnLabel_4:
   \   0000C5                ; Setup parameters for call to function halLcdSpiTxData
   \   0000C5   7916         MOV       R1,#0x16
   \   0000C7   12....       LCALL     ?Subroutine4 & 0xFFFF
    340              halLcdSpiTxData(0x1D);
    341              halLcdSpiTxData(0x21);
    342              halLcdSpiTxData(0x26);
    343              halLcdSpiTxData(0x37);
   \                     ??CrossCallReturnLabel_2:
   \   0000CA                ; Setup parameters for call to function halLcdSpiTxData
   \   0000CA   7937         MOV       R1,#0x37
   \   0000CC   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
    344              halLcdSpiTxData(0x3C);
   \   0000CF                ; Setup parameters for call to function halLcdSpiTxData
   \   0000CF   793C         MOV       R1,#0x3c
   \   0000D1   12....       LCALL     ?Subroutine3 & 0xFFFF
    345              halLcdSpiTxData(0x00);
    346              halLcdSpiTxData(0x09);
    347              halLcdSpiTxData(0x05);
    348              halLcdSpiTxData(0x10);
    349          
    350              halLcdSpiTxCmd(0xE1);
   \                     ??CrossCallReturnLabel_0:
   \   0000D4                ; Setup parameters for call to function halLcdSpiTxCmd
   \   0000D4   79E1         MOV       R1,#-0x1f
   \   0000D6   12....       LCALL     `??halLcdSpiTxCmd::?relay`; Banked call to: halLcdSpiTxCmd
    351              halLcdSpiTxData(0x0C);
   \   0000D9                ; Setup parameters for call to function halLcdSpiTxData
   \   0000D9   790C         MOV       R1,#0xc
   \   0000DB   12....       LCALL     ?Subroutine6 & 0xFFFF
    352              halLcdSpiTxData(0x19);
    353              halLcdSpiTxData(0x09);
   \                     ??CrossCallReturnLabel_5:
   \   0000DE                ; Setup parameters for call to function halLcdSpiTxData
   \   0000DE   7909         MOV       R1,#0x9
   \   0000E0   12....       LCALL     ?Subroutine9 & 0xFFFF
    354              halLcdSpiTxData(0x0D);
    355              halLcdSpiTxData(0x1B);
   \                     ??CrossCallReturnLabel_10:
   \   0000E3                ; Setup parameters for call to function halLcdSpiTxData
   \   0000E3   791B         MOV       R1,#0x1b
   \   0000E5   12....       LCALL     ?Subroutine6 & 0xFFFF
    356              halLcdSpiTxData(0x19);
    357              halLcdSpiTxData(0x15);
   \                     ??CrossCallReturnLabel_6:
   \   0000E8                ; Setup parameters for call to function halLcdSpiTxData
   \   0000E8   7915         MOV       R1,#0x15
   \   0000EA   12....       LCALL     ?Subroutine4 & 0xFFFF
    358              halLcdSpiTxData(0x1D);
    359              halLcdSpiTxData(0x21);
    360              halLcdSpiTxData(0x26);
    361              halLcdSpiTxData(0x39);
   \                     ??CrossCallReturnLabel_3:
   \   0000ED                ; Setup parameters for call to function halLcdSpiTxData
   \   0000ED   7939         MOV       R1,#0x39
   \   0000EF   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
    362              halLcdSpiTxData(0x3E);
   \   0000F2                ; Setup parameters for call to function halLcdSpiTxData
   \   0000F2   793E         MOV       R1,#0x3e
   \   0000F4   12....       LCALL     ?Subroutine3 & 0xFFFF
    363              halLcdSpiTxData(0x00);
    364              halLcdSpiTxData(0x09);
    365              halLcdSpiTxData(0x05);
    366              halLcdSpiTxData(0x10);
    367              halLcdSpiTxCmd(0x29);
   \                     ??CrossCallReturnLabel_1:
   \   0000F7                ; Setup parameters for call to function halLcdSpiTxCmd
   \   0000F7   7929         MOV       R1,#0x29
   \   0000F9   12....       LCALL     `??halLcdSpiTxCmd::?relay`; Banked call to: halLcdSpiTxCmd
    368          }
   \   0000FC   7F01         MOV       R7,#0x1
   \   0000FE   02....       LJMP      ?BANKED_LEAVE_XDATA
   \   000101                REQUIRE _A_P1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine18:
   \   000000   12....       LCALL     `??halLcdSpiTxCmd::?relay`; Banked call to: halLcdSpiTxCmd
   \   000003                ; Setup parameters for call to function halLcdSpiTxData
   \   000003                ; Setup parameters for call to function halLcdSpiTxData
   \   000003   798D         MOV       R1,#-0x73
   \   000005   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine9:
   \   000000   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000003                ; Setup parameters for call to function halLcdSpiTxData
   \   000003                ; Setup parameters for call to function halLcdSpiTxData
   \   000003   790D         MOV       R1,#0xd
   \   000005   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000003                ; Setup parameters for call to function halLcdSpiTxData
   \   000003                ; Setup parameters for call to function halLcdSpiTxData
   \   000003                ; Setup parameters for call to function halLcdSpiTxData
   \   000003   7919         MOV       R1,#0x19
   \   000005   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000003                ; Setup parameters for call to function halLcdSpiTxData
   \   000003                ; Setup parameters for call to function halLcdSpiTxData
   \   000003   791D         MOV       R1,#0x1d
   \   000005   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000008                ; Setup parameters for call to function halLcdSpiTxData
   \   000008                ; Setup parameters for call to function halLcdSpiTxData
   \   000008   7921         MOV       R1,#0x21
   \   00000A   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   00000D                ; Setup parameters for call to function halLcdSpiTxData
   \   00000D                ; Setup parameters for call to function halLcdSpiTxData
   \   00000D   7926         MOV       R1,#0x26
   \   00000F   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000012   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   12....       LCALL     ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_32:
   \   000003                ; Setup parameters for call to function halLcdSpiTxData
   \   000003                ; Setup parameters for call to function halLcdSpiTxData
   \   000003   7909         MOV       R1,#0x9
   \   000005   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000008                ; Setup parameters for call to function halLcdSpiTxData
   \   000008                ; Setup parameters for call to function halLcdSpiTxData
   \   000008   7905         MOV       R1,#0x5
   \   00000A   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   00000D                ; Setup parameters for call to function halLcdSpiTxData
   \   00000D                ; Setup parameters for call to function halLcdSpiTxData
   \   00000D   7910         MOV       R1,#0x10
   \   00000F   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000012   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine19:
   \   000000   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000003                ; Setup parameters for call to function halLcdSpiTxData
   \   000003                ; Setup parameters for call to function halLcdSpiTxData
   \   000003                ; Setup parameters for call to function halLcdSpiTxData
   \   000003   7900         MOV       R1,#0x0
   \   000005   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   12....       LCALL     `??halLcdSpiTxCmd::?relay`; Banked call to: halLcdSpiTxCmd
   \   000003                ; Setup parameters for call to function halLcdSpiTxData
   \   000003                ; Setup parameters for call to function halLcdSpiTxData
   \   000003                ; Setup parameters for call to function halLcdSpiTxData
   \   000003                REQUIRE ??Subroutine23_0
   \   000003                ; // Fall through to label ??Subroutine23_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine23_0:
   \   000000   7905         MOV       R1,#0x5
   \   000002   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000005                ; Setup parameters for call to function halLcdSpiTxData
   \   000005                ; Setup parameters for call to function halLcdSpiTxData
   \   000005                ; Setup parameters for call to function halLcdSpiTxData
   \   000005                ; Setup parameters for call to function halLcdSpiTxData
   \   000005   793C         MOV       R1,#0x3c
   \   000007   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   00000A                ; Setup parameters for call to function halLcdSpiTxData
   \   00000A                ; Setup parameters for call to function halLcdSpiTxData
   \   00000A                ; Setup parameters for call to function halLcdSpiTxData
   \   00000A                ; Setup parameters for call to function halLcdSpiTxData
   \   00000A   793C         MOV       R1,#0x3c
   \   00000C   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   00000F   22           RET
    369          #endif
    370          
    371          #if (defined LCD_TYPE) && (LCD_TYPE == LCD_TFT096)
    372          static void halTFTSetRegion(uint16 xs, uint16 ys, uint16 xe, uint16 ye)
    373          {
    374              halLcdSpiTxCmd(0x2a);
    375              halLcdSpiTxData(0x00); 
    376              halLcdSpiTxData(xs + 2); 
    377              halLcdSpiTxData(0x00); 
    378              halLcdSpiTxData(xe + 2);
    379          
    380              halLcdSpiTxCmd(0x2b);
    381              halLcdSpiTxData(0x00); 
    382              halLcdSpiTxData(ys + 3); 
    383              halLcdSpiTxData(0x00); 
    384              halLcdSpiTxData(ye + 3);
    385              
    386              halLcdSpiTxCmd(0x2c);
    387          }
    388          #endif
    389          
    390          #if (defined LCD_TYPE) && (LCD_TYPE == LCD_IPS096_T1)

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    391          static void halTFTSetRegion(uint8 madctl, uint16 xs, uint16 ys, uint16 xe, uint16 ye)
   \                     halTFTSetRegion:
    392          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000   74F1         MOV       A,#-0xf
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 15
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV       ?V4,R2
   \   000007   8B..         MOV       ?V5,R3
   \   000009   8C..         MOV       ?V2,R4
   \   00000B   8D..         MOV       ?V3,R5
   \   00000D   740F         MOV       A,#0xf
   \   00000F   12....       LCALL     ?XSTACK_DISP0_8
   \   000012   E0           MOVX      A,@DPTR
   \   000013   FE           MOV       R6,A
   \   000014   A3           INC       DPTR
   \   000015   E0           MOVX      A,@DPTR
   \   000016   FF           MOV       R7,A
   \   000017   7411         MOV       A,#0x11
   \   000019   12....       LCALL     ?XSTACK_DISP0_8
   \   00001C   12....       LCALL     ?Subroutine12 & 0xFFFF
    393              if (madctl == ST7735S_MADCTL_RGB) {
   \                     ??CrossCallReturnLabel_16:
   \   00001F   7408         MOV       A,#0x8
   \   000021   69           XRL       A,R1
   \   000022   6005         JZ        ??halTFTSetRegion_0
    394                  halLcdSpiTxCmd(0x2a);
    395                  HAL_TFT_WRITE_UINT16(xs+24);
    396                  HAL_TFT_WRITE_UINT16(xe+24);
    397                  halLcdSpiTxCmd(0x2b);
    398                  HAL_TFT_WRITE_UINT16(ys);
    399                  HAL_TFT_WRITE_UINT16(ye);
    400                  halLcdSpiTxCmd(0x2c);
    401              }
    402              else if (madctl == ST7735S_MADCTL_MY_MX_RGB) {
   \   000024   74C8         MOV       A,#-0x38
   \   000026   69           XRL       A,R1
   \   000027   703A         JNZ       ??halTFTSetRegion_1
    403                  halLcdSpiTxCmd(0x2a);
   \                     ??halTFTSetRegion_0:
   \   000029                ; Setup parameters for call to function halLcdSpiTxCmd
   \   000029   792A         MOV       R1,#0x2a
   \   00002B   12....       LCALL     `??halLcdSpiTxCmd::?relay`; Banked call to: halLcdSpiTxCmd
    404                  HAL_TFT_WRITE_UINT16(xs+24);
   \   00002E                ; Setup parameters for call to function halLcdSpiTxData
   \   00002E   E5..         MOV       A,?V4
   \   000030   2418         ADD       A,#0x18
   \   000032   E4           CLR       A
   \   000033   35..         ADDC      A,?V5
   \   000035   F9           MOV       R1,A
   \   000036   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000039                ; Setup parameters for call to function halLcdSpiTxData
   \   000039   E5..         MOV       A,?V4
   \   00003B   12....       LCALL     ?Subroutine17 & 0xFFFF
    405                  HAL_TFT_WRITE_UINT16(xe+24);
   \                     ??CrossCallReturnLabel_26:
   \   00003E                ; Setup parameters for call to function halLcdSpiTxData
   \   00003E   EE           MOV       A,R6
   \   00003F   2418         ADD       A,#0x18
   \   000041   E4           CLR       A
   \   000042   3F           ADDC      A,R7
   \   000043   F9           MOV       R1,A
   \   000044   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000047                ; Setup parameters for call to function halLcdSpiTxData
   \   000047   EE           MOV       A,R6
   \   000048   12....       LCALL     ?Subroutine17 & 0xFFFF
    406                  halLcdSpiTxCmd(0x2b);
   \                     ??CrossCallReturnLabel_27:
   \   00004B                ; Setup parameters for call to function halLcdSpiTxCmd
   \   00004B   792B         MOV       R1,#0x2b
   \   00004D   12....       LCALL     `??halLcdSpiTxCmd::?relay`; Banked call to: halLcdSpiTxCmd
    407                  HAL_TFT_WRITE_UINT16(ys);
   \   000050                ; Setup parameters for call to function halLcdSpiTxData
   \   000050   A9..         MOV       R1,?V3
   \   000052   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000055                ; Setup parameters for call to function halLcdSpiTxData
   \   000055   A9..         MOV       R1,?V2
   \   000057   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
    408                  HAL_TFT_WRITE_UINT16(ye);
   \   00005A                ; Setup parameters for call to function halLcdSpiTxData
   \   00005A   A9..         MOV       R1,?V1
   \   00005C   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   00005F                ; Setup parameters for call to function halLcdSpiTxData
   \   00005F   A9..         MOV       R1,?V0
   \   000061   8032         SJMP      ??halTFTSetRegion_2
    409                  halLcdSpiTxCmd(0x2c);
    410              }
    411              else if(madctl == ST7735S_MADCTL_MX_MV_ML_RGB) {
    412                  halLcdSpiTxCmd(0x2a);
    413                  HAL_TFT_WRITE_UINT16(xs);
    414                  HAL_TFT_WRITE_UINT16(xe);
    415                  halLcdSpiTxCmd(0x2b);
    416                  HAL_TFT_WRITE_UINT16(ys+24);
    417                  HAL_TFT_WRITE_UINT16(ye+24);
    418                  halLcdSpiTxCmd(0x2c);
    419              }
    420              else {
    421                  halLcdSpiTxCmd(0x2a);
   \                     ??halTFTSetRegion_1:
   \   000063                ; Setup parameters for call to function halLcdSpiTxCmd
   \   000063   792A         MOV       R1,#0x2a
   \   000065   12....       LCALL     `??halLcdSpiTxCmd::?relay`; Banked call to: halLcdSpiTxCmd
    422                  HAL_TFT_WRITE_UINT16(xs);
   \   000068                ; Setup parameters for call to function halLcdSpiTxData
   \   000068   A9..         MOV       R1,?V5
   \   00006A   12....       LCALL     ?Subroutine8 & 0xFFFF
    423                  HAL_TFT_WRITE_UINT16(xe);
   \                     ??CrossCallReturnLabel_8:
   \   00006D                ; Setup parameters for call to function halLcdSpiTxData
   \   00006D   12....       LCALL     ?Subroutine5 & 0xFFFF
    424                  halLcdSpiTxCmd(0x2b);
   \                     ??CrossCallReturnLabel_38:
   \   000070                ; Setup parameters for call to function halLcdSpiTxCmd
   \   000070   792B         MOV       R1,#0x2b
   \   000072   12....       LCALL     `??halLcdSpiTxCmd::?relay`; Banked call to: halLcdSpiTxCmd
    425                  HAL_TFT_WRITE_UINT16(ys+24);
   \   000075                ; Setup parameters for call to function halLcdSpiTxData
   \   000075   E5..         MOV       A,?V2
   \   000077   2418         ADD       A,#0x18
   \   000079   E4           CLR       A
   \   00007A   35..         ADDC      A,?V3
   \   00007C   F9           MOV       R1,A
   \   00007D   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000080                ; Setup parameters for call to function halLcdSpiTxData
   \   000080   E5..         MOV       A,?V2
   \   000082   12....       LCALL     ?Subroutine17 & 0xFFFF
    426                  HAL_TFT_WRITE_UINT16(ye+24);
   \                     ??CrossCallReturnLabel_28:
   \   000085                ; Setup parameters for call to function halLcdSpiTxData
   \   000085   E5..         MOV       A,?V0
   \   000087   2418         ADD       A,#0x18
   \   000089   E4           CLR       A
   \   00008A   35..         ADDC      A,?V1
   \   00008C   F9           MOV       R1,A
   \   00008D   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000090                ; Setup parameters for call to function halLcdSpiTxData
   \   000090   E5..         MOV       A,?V0
   \   000092   2418         ADD       A,#0x18
   \   000094   F9           MOV       R1,A
   \                     ??halTFTSetRegion_2:
   \   000095   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
    427                  halLcdSpiTxCmd(0x2c);
   \   000098                ; Setup parameters for call to function halLcdSpiTxCmd
   \   000098   792C         MOV       R1,#0x2c
   \   00009A   12....       LCALL     `??halLcdSpiTxCmd::?relay`; Banked call to: halLcdSpiTxCmd
    428              }
    429          }
   \   00009D   7F07         MOV       R7,#0x7
   \   00009F   02....       LJMP      ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine17:
   \   000000   2418         ADD       A,#0x18
   \   000002   F9           MOV       R1,A
   \   000003   12....       LCALL     `??halLcdSpiTxData::?relay`; Banked call to: halLcdSpiTxData
   \   000006   22           RET
    430          #endif
    431          
    432          static void halTFTSetPosition(uint16 x, uint16 y)
    433          {
    434              HAL_TFT_SET_REGION(x, y, x, y);
    435          }
    436          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    437          static void halTFTDrawPixel(uint16 xs, uint16 ys, uint16 color)
   \                     halTFTDrawPixel:
    438          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV       A,#-0xa
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    439              HAL_TFT_SET_REGION(xs, ys, xs+1, ys+1);
   \   000005                ; Setup parameters for call to function halTFTSetRegion
   \   000005   EC           MOV       A,R4
   \   000006   2401         ADD       A,#0x1
   \   000008   F5..         MOV       ?V0,A
   \   00000A   E4           CLR       A
   \   00000B   3D           ADDC      A,R5
   \   00000C   F5..         MOV       ?V1,A
   \   00000E   78..         MOV       R0,#?V0
   \   000010   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000013   EA           MOV       A,R2
   \   000014   2401         ADD       A,#0x1
   \   000016   F5..         MOV       ?V0,A
   \   000018   E4           CLR       A
   \   000019   3B           ADDC      A,R3
   \   00001A   F5..         MOV       ?V1,A
   \   00001C   78..         MOV       R0,#?V0
   \   00001E   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000021   12....       LCALL     ??Subroutine21_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_36:
   \   000024   12....       LCALL     ?DEALLOC_XSTACK8
   \   000027   740A         MOV       A,#0xa
   \   000029   12....       LCALL     ?XSTACK_DISP0_8
   \   00002C   E0           MOVX      A,@DPTR
   \   00002D   FE           MOV       R6,A
   \   00002E   A3           INC       DPTR
   \   00002F   E0           MOVX      A,@DPTR
    440              HAL_TFT_WRITE_UINT16(color);
   \   000030                ; Setup parameters for call to function halLcdSpiTxData
   \   000030   12....       LCALL     ??Subroutine22_0 & 0xFFFF
    441          }
   \                     ??CrossCallReturnLabel_39:
   \   000033   02....       LJMP      ?Subroutine0 & 0xFFFF
    442          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    443          static void halTFTShowChar8x16(uint16 x, uint16 y, uint16 fontColor, uint16 backgroundColor, uint8 ch)
   \                     halTFTShowChar8x16:
    444          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V7
   \   000000   74F0         MOV       A,#-0x10
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 8
   \   000005   74F8         MOV       A,#-0x8
   \   000007   12....       LCALL     ?ALLOC_XSTACK8
   \   00000A   7406         MOV       A,#0x6
   \   00000C   12....       LCALL     ?XSTACK_DISP0_8
   \   00000F   EA           MOV       A,R2
   \   000010   F0           MOVX      @DPTR,A
   \   000011   A3           INC       DPTR
   \   000012   EB           MOV       A,R3
   \   000013   F0           MOVX      @DPTR,A
   \   000014   7404         MOV       A,#0x4
   \   000016   12....       LCALL     ?XSTACK_DISP0_8
   \   000019   EC           MOV       A,R4
   \   00001A   F0           MOVX      @DPTR,A
   \   00001B   A3           INC       DPTR
   \   00001C   ED           MOV       A,R5
   \   00001D   F0           MOVX      @DPTR,A
   \   00001E   E9           MOV       A,R1
   \   00001F   85..82       MOV       DPL,?XSP + 0
   \   000022   85..83       MOV       DPH,?XSP + 1
   \   000025   F0           MOVX      @DPTR,A
    445              uint16 charIndex;
    446              
    447              /* index of font table, height: 16 */
    448              if(ch > 32) charIndex = (ch - 32) * 16;
   \   000026   C3           CLR       C
   \   000027   9421         SUBB      A,#0x21
   \   000029   401E         JC        ??halTFTShowChar8x16_0
   \   00002B   E0           MOVX      A,@DPTR
   \   00002C   24E0         ADD       A,#-0x20
   \   00002E   F5..         MOV       ?V0,A
   \   000030   E4           CLR       A
   \   000031   34FF         ADDC      A,#-0x1
   \   000033   F5..         MOV       ?V1,A
   \   000035   7404         MOV       A,#0x4
   \   000037   78..         MOV       R0,#?V0
   \   000039   12....       LCALL     ?S_SHL
   \   00003C   7402         MOV       A,#0x2
   \   00003E   12....       LCALL     ?XSTACK_DISP0_8
   \   000041   E5..         MOV       A,?V0
   \   000043   F0           MOVX      @DPTR,A
   \   000044   A3           INC       DPTR
   \   000045   E5..         MOV       A,?V1
   \   000047   8008         SJMP      ??halTFTShowChar8x16_1
    449              else charIndex = 0;
   \                     ??halTFTShowChar8x16_0:
   \   000049   7402         MOV       A,#0x2
   \   00004B   12....       LCALL     ?XSTACK_DISP0_8
   \   00004E   E4           CLR       A
   \   00004F   F0           MOVX      @DPTR,A
   \   000050   A3           INC       DPTR
   \                     ??halTFTShowChar8x16_1:
   \   000051   F0           MOVX      @DPTR,A
    450              
    451              /* Show Line */
    452              for (uint8 l = 0; l < 16; l++)
   \   000052   7401         MOV       A,#0x1
   \   000054   12....       LCALL     ?XSTACK_DISP0_8
   \   000057   E4           CLR       A
   \   000058   F0           MOVX      @DPTR,A
   \   000059   7418         MOV       A,#0x18
   \   00005B   12....       LCALL     ?XSTACK_DISP0_8
   \   00005E   E0           MOVX      A,@DPTR
   \   00005F   F5..         MOV       ?V6,A
   \   000061   A3           INC       DPTR
   \   000062   E0           MOVX      A,@DPTR
   \   000063   F5..         MOV       ?V7,A
   \   000065   741A         MOV       A,#0x1a
   \   000067   12....       LCALL     ?XSTACK_DISP0_8
   \   00006A   E0           MOVX      A,@DPTR
   \   00006B   F5..         MOV       ?V2,A
   \   00006D   A3           INC       DPTR
   \   00006E   E0           MOVX      A,@DPTR
   \   00006F   F5..         MOV       ?V3,A
    453                  /* Show Column: 8column per line */
    454                for(uint8 c = 0; c < 8; c++) {
   \                     ??halTFTShowChar8x16_2:
   \   000071   85..82       MOV       DPL,?XSP + 0
   \   000074   85..83       MOV       DPH,?XSP + 1
   \   000077   E4           CLR       A
   \   000078   F0           MOVX      @DPTR,A
   \   000079   04           INC       A
   \   00007A   12....       LCALL     ?XSTACK_DISP0_8
   \   00007D   E0           MOVX      A,@DPTR
   \   00007E   F5..         MOV       ?V0,A
   \   000080   7404         MOV       A,#0x4
   \   000082   12....       LCALL     ?XSTACK_DISP0_8
   \   000085   E0           MOVX      A,@DPTR
   \   000086   25..         ADD       A,?V0
   \   000088   FE           MOV       R6,A
   \   000089   A3           INC       DPTR
   \   00008A   E0           MOVX      A,@DPTR
   \   00008B   3400         ADDC      A,#0x0
   \   00008D   FF           MOV       R7,A
    455                      if(HAL_TFT_FONT_TBL_8x16[charIndex + l] & (0x80 >> c)) halTFTDrawPixel(x + c, y + l, fontColor);
   \                     ??halTFTShowChar8x16_3:
   \   00008E   7406         MOV       A,#0x6
   \   000090   12....       LCALL     ?XSTACK_DISP0_8
   \   000093   C082         PUSH      DPL
   \   000095   C083         PUSH      DPH
   \   000097   85..82       MOV       DPL,?XSP + 0
   \   00009A   85..83       MOV       DPH,?XSP + 1
   \   00009D   E0           MOVX      A,@DPTR
   \   00009E   F8           MOV       R0,A
   \   00009F   D083         POP       DPH
   \   0000A1   D082         POP       DPL
   \   0000A3   12....       LCALL     ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_11:
   \   0000A6   85..82       MOV       DPL,?XSP + 0
   \   0000A9   85..83       MOV       DPH,?XSP + 1
   \   0000AC   E0           MOVX      A,@DPTR
   \   0000AD   78..         MOV       R0,#?V4
   \   0000AF   12....       LCALL     ?SS_SHR
   \   0000B2   7402         MOV       A,#0x2
   \   0000B4   12....       LCALL     ?XSTACK_DISP0_8
   \   0000B7   E0           MOVX      A,@DPTR
   \   0000B8   25..         ADD       A,?V0
   \   0000BA   F8           MOV       R0,A
   \   0000BB   A3           INC       DPTR
   \   0000BC   E0           MOVX      A,@DPTR
   \   0000BD   3400         ADDC      A,#0x0
   \   0000BF   F9           MOV       R1,A
   \   0000C0   74..         MOV       A,#FontTable_H_8X16 & 0xff
   \   0000C2   28           ADD       A,R0
   \   0000C3   F582         MOV       DPL,A
   \   0000C5   74..         MOV       A,#(FontTable_H_8X16 >> 8) & 0xff
   \   0000C7   39           ADDC      A,R1
   \   0000C8   F583         MOV       DPH,A
   \   0000CA   E0           MOVX      A,@DPTR
   \   0000CB   55..         ANL       A,?V4
   \   0000CD   600D         JZ        ??halTFTShowChar8x16_4
   \   0000CF                ; Setup parameters for call to function halTFTDrawPixel
   \   0000CF   85....       MOV       ?V4,?V6
   \   0000D2   85....       MOV       ?V5,?V7
   \   0000D5   78..         MOV       R0,#?V4
   \   0000D7   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0000DA   8005         SJMP      ??halTFTShowChar8x16_5
    456                      else halTFTDrawPixel(x + c, y + l, backgroundColor);
   \                     ??halTFTShowChar8x16_4:
   \   0000DC                ; Setup parameters for call to function halTFTDrawPixel
   \   0000DC   78..         MOV       R0,#?V2
   \   0000DE   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \                     ??halTFTShowChar8x16_5:
   \   0000E1   EE           MOV       A,R6
   \   0000E2   FC           MOV       R4,A
   \   0000E3   EF           MOV       A,R7
   \   0000E4   FD           MOV       R5,A
   \   0000E5   12....       LCALL     `??halTFTDrawPixel::?relay`; Banked call to: halTFTDrawPixel
   \   0000E8   7402         MOV       A,#0x2
   \   0000EA   12....       LCALL     ?DEALLOC_XSTACK8
    457                }
   \   0000ED   85..82       MOV       DPL,?XSP + 0
   \   0000F0   85..83       MOV       DPH,?XSP + 1
   \   0000F3   E0           MOVX      A,@DPTR
   \   0000F4   04           INC       A
   \   0000F5   F0           MOVX      @DPTR,A
   \   0000F6   C3           CLR       C
   \   0000F7   9408         SUBB      A,#0x8
   \   0000F9   4093         JC        ??halTFTShowChar8x16_3
   \   0000FB   7401         MOV       A,#0x1
   \   0000FD   12....       LCALL     ?XSTACK_DISP0_8
   \   000100   E0           MOVX      A,@DPTR
   \   000101   04           INC       A
   \   000102   F0           MOVX      @DPTR,A
   \   000103   C3           CLR       C
   \   000104   9410         SUBB      A,#0x10
   \   000106   5003         JNC       $+5
   \   000108   02....       LJMP      ??halTFTShowChar8x16_2 & 0xFFFF
    458          }
   \   00010B   7408         MOV       A,#0x8
   \   00010D   80..         SJMP      ??Subroutine24_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine10:
   \   000000   E0           MOVX      A,@DPTR
   \   000001   28           ADD       A,R0
   \   000002   FA           MOV       R2,A
   \   000003   A3           INC       DPTR
   \   000004   E0           MOVX      A,@DPTR
   \   000005   3400         ADDC      A,#0x0
   \   000007   FB           MOV       R3,A
   \   000008   75..80       MOV       ?V4,#-0x80
   \   00000B   75..00       MOV       ?V5,#0x0
   \   00000E   22           RET
    459          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    460          static void halTFTShowChineseChar16x16(uint16 x, uint16 y, uint16 fontColor, uint16 backgroundColor, uint8 chL, uint8 chR)
   \                     halTFTShowChineseChar16x16:
    461          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V7
   \   000000   74F0         MOV       A,#-0x10
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 9
   \   000005   74F7         MOV       A,#-0x9
   \   000007   12....       LCALL     ?ALLOC_XSTACK8
   \   00000A   7405         MOV       A,#0x5
   \   00000C   12....       LCALL     ?XSTACK_DISP0_8
   \   00000F   EA           MOV       A,R2
   \   000010   F0           MOVX      @DPTR,A
   \   000011   A3           INC       DPTR
   \   000012   EB           MOV       A,R3
   \   000013   F0           MOVX      @DPTR,A
   \   000014   7407         MOV       A,#0x7
   \   000016   12....       LCALL     ?XSTACK_DISP0_8
   \   000019   EC           MOV       A,R4
   \   00001A   F0           MOVX      @DPTR,A
   \   00001B   A3           INC       DPTR
   \   00001C   ED           MOV       A,R5
   \   00001D   F0           MOVX      @DPTR,A
   \   00001E   7402         MOV       A,#0x2
   \   000020   12....       LCALL     ?XSTACK_DISP0_8
   \   000023   E9           MOV       A,R1
   \   000024   F0           MOVX      @DPTR,A
    462              for (uint16 i = 0; i < HAL_TFT_FONT_TBL_CHINESE_SIZE; i++) {
   \   000025   7800         MOV       R0,#0x0
   \   000027   7900         MOV       R1,#0x0
   \   000029   741D         MOV       A,#0x1d
   \   00002B   12....       LCALL     ?XSTACK_DISP0_8
   \   00002E   E0           MOVX      A,@DPTR
   \   00002F   FC           MOV       R4,A
    463                  if (HAL_TFT_FONT_TBL_CHINESE_16x16[i].Char16x16[0] != chL || HAL_TFT_FONT_TBL_CHINESE_16x16[i].Char16x16[1] != chR) continue;
   \                     ??halTFTShowChineseChar16x16_0:
   \   000030   E8           MOV       A,R0
   \   000031   FA           MOV       R2,A
   \   000032   E9           MOV       A,R1
   \   000033   FB           MOV       R3,A
   \   000034   EA           MOV       A,R2
   \   000035   75F022       MOV       B,#0x22
   \   000038   A4           MUL       AB
   \   000039   FA           MOV       R2,A
   \   00003A   ADF0         MOV       R5,B
   \   00003C   75F022       MOV       B,#0x22
   \   00003F   EB           MOV       A,R3
   \   000040   A4           MUL       AB
   \   000041   2D           ADD       A,R5
   \   000042   FB           MOV       R3,A
   \   000043   74..         MOV       A,#FontTable_Chinese_H_16X16 & 0xff
   \   000045   2A           ADD       A,R2
   \   000046   FA           MOV       R2,A
   \   000047   74..         MOV       A,#(FontTable_Chinese_H_16X16 >> 8) & 0xff
   \   000049   3B           ADDC      A,R3
   \   00004A   FB           MOV       R3,A
   \   00004B   85..82       MOV       DPL,?XSP + 0
   \   00004E   85..83       MOV       DPH,?XSP + 1
   \   000051   EA           MOV       A,R2
   \   000052   F0           MOVX      @DPTR,A
   \   000053   A3           INC       DPTR
   \   000054   EB           MOV       A,R3
   \   000055   F0           MOVX      @DPTR,A
   \   000056   12....       LCALL     ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_22:
   \   000059   E0           MOVX      A,@DPTR
   \   00005A   FA           MOV       R2,A
   \   00005B   7402         MOV       A,#0x2
   \   00005D   12....       LCALL     ?XSTACK_DISP0_8
   \   000060   E0           MOVX      A,@DPTR
   \   000061   6A           XRL       A,R2
   \   000062   7008         JNZ       ??halTFTShowChineseChar16x16_1
   \   000064   12....       LCALL     ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_23:
   \   000067   A3           INC       DPTR
   \   000068   E0           MOVX      A,@DPTR
   \   000069   6C           XRL       A,R4
   \   00006A   6012         JZ        ??halTFTShowChineseChar16x16_2
   \                     ??halTFTShowChineseChar16x16_1:
   \   00006C   08           INC       R0
   \   00006D   E8           MOV       A,R0
   \   00006E   7001         JNZ       ??halTFTShowChineseChar16x16_3
   \   000070   09           INC       R1
   \                     ??halTFTShowChineseChar16x16_3:
   \   000071   C3           CLR       C
   \   000072   9404         SUBB      A,#0x4
   \   000074   E9           MOV       A,R1
   \   000075   9400         SUBB      A,#0x0
   \   000077   4003         JC        $+5
   \   000079   02....       LJMP      ??halTFTShowChineseChar16x16_4 & 0xFFFF
   \   00007C   80B2         SJMP      ??halTFTShowChineseChar16x16_0
    464                  
    465                  /* Show Line */
    466                  for (uint8 l = 0; l < 16; l++) {
   \                     ??halTFTShowChineseChar16x16_2:
   \   00007E   75..00       MOV       ?V7,#0x0
   \   000081   7419         MOV       A,#0x19
   \   000083   12....       LCALL     ?XSTACK_DISP0_8
   \   000086   E0           MOVX      A,@DPTR
   \   000087   F5..         MOV       ?V2,A
   \   000089   A3           INC       DPTR
   \   00008A   E0           MOVX      A,@DPTR
   \   00008B   F5..         MOV       ?V3,A
   \   00008D   741B         MOV       A,#0x1b
   \   00008F   12....       LCALL     ?XSTACK_DISP0_8
   \   000092   12....       LCALL     ?Subroutine12 & 0xFFFF
    467                      /* Show Column: 16column per line */
    468                      // First 8column
    469                      for (uint8 c1 = 0; c1 < 8; c1++) {
   \                     ??CrossCallReturnLabel_17:
   \   000095   75..00       MOV       ?V6,#0x0
   \   000098   A8..         MOV       R0,?V7
   \   00009A   E8           MOV       A,R0
   \   00009B   28           ADD       A,R0
   \   00009C   F8           MOV       R0,A
   \   00009D   E4           CLR       A
   \   00009E   33           RLC       A
   \   00009F   F9           MOV       R1,A
   \   0000A0   85..82       MOV       DPL,?XSP + 0
   \   0000A3   85..83       MOV       DPH,?XSP + 1
   \   0000A6   E0           MOVX      A,@DPTR
   \   0000A7   28           ADD       A,R0
   \   0000A8   F8           MOV       R0,A
   \   0000A9   A3           INC       DPTR
   \   0000AA   E0           MOVX      A,@DPTR
   \   0000AB   39           ADDC      A,R1
   \   0000AC   F9           MOV       R1,A
   \   0000AD   7403         MOV       A,#0x3
   \   0000AF   12....       LCALL     ?XSTACK_DISP0_8
   \   0000B2   E8           MOV       A,R0
   \   0000B3   F0           MOVX      @DPTR,A
   \   0000B4   A3           INC       DPTR
   \   0000B5   E9           MOV       A,R1
   \   0000B6   F0           MOVX      @DPTR,A
   \   0000B7   7407         MOV       A,#0x7
   \   0000B9   12....       LCALL     ?XSTACK_DISP0_8
   \   0000BC   A8..         MOV       R0,?V7
   \   0000BE   E0           MOVX      A,@DPTR
   \   0000BF   28           ADD       A,R0
   \   0000C0   FE           MOV       R6,A
   \   0000C1   A3           INC       DPTR
   \   0000C2   E0           MOVX      A,@DPTR
   \   0000C3   3400         ADDC      A,#0x0
   \   0000C5   FF           MOV       R7,A
    470                          if(HAL_TFT_FONT_TBL_CHINESE_16x16[i].code[l*2] & (0x80>>c1))
   \                     ??halTFTShowChineseChar16x16_5:
   \   0000C6   7405         MOV       A,#0x5
   \   0000C8   12....       LCALL     ?XSTACK_DISP0_8
   \   0000CB   A8..         MOV       R0,?V6
   \   0000CD   12....       LCALL     ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_12:
   \   0000D0   E8           MOV       A,R0
   \   0000D1   78..         MOV       R0,#?V4
   \   0000D3   12....       LCALL     ?SS_SHR
   \   0000D6   7403         MOV       A,#0x3
   \   0000D8   12....       LCALL     ?XSTACK_DISP0_8
   \   0000DB   12....       LCALL     ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_18:
   \   0000DE   E0           MOVX      A,@DPTR
   \   0000DF   55..         ANL       A,?V4
   \   0000E1   6007         JZ        ??halTFTShowChineseChar16x16_6
    471                              halTFTDrawPixel(x + c1, y + l, fontColor);
   \   0000E3                ; Setup parameters for call to function halTFTDrawPixel
   \   0000E3   78..         MOV       R0,#?V2
   \   0000E5   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0000E8   8005         SJMP      ??halTFTShowChineseChar16x16_7
    472                          else
    473                              halTFTDrawPixel(x + c1, y + l, backgroundColor);
   \                     ??halTFTShowChineseChar16x16_6:
   \   0000EA                ; Setup parameters for call to function halTFTDrawPixel
   \   0000EA   78..         MOV       R0,#?V0
   \   0000EC   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \                     ??halTFTShowChineseChar16x16_7:
   \   0000EF   EE           MOV       A,R6
   \   0000F0   FC           MOV       R4,A
   \   0000F1   EF           MOV       A,R7
   \   0000F2   FD           MOV       R5,A
   \   0000F3   12....       LCALL     `??halTFTDrawPixel::?relay`; Banked call to: halTFTDrawPixel
   \   0000F6   7402         MOV       A,#0x2
   \   0000F8   12....       LCALL     ?DEALLOC_XSTACK8
    474                      }
   \   0000FB   05..         INC       ?V6
   \   0000FD   E5..         MOV       A,?V6
   \   0000FF   C3           CLR       C
   \   000100   9408         SUBB      A,#0x8
   \   000102   40C2         JC        ??halTFTShowChineseChar16x16_5
    475                      // Last 8column
    476                      for (uint8 c2 = 0; c2 < 8; c2++) {
   \   000104   75..00       MOV       ?V6,#0x0
    477                          if(HAL_TFT_FONT_TBL_CHINESE_16x16[i].code[l*2+1] & (0x80>>c2))
   \                     ??halTFTShowChineseChar16x16_8:
   \   000107   7405         MOV       A,#0x5
   \   000109   12....       LCALL     ?XSTACK_DISP0_8
   \   00010C   A8..         MOV       R0,?V6
   \   00010E   E0           MOVX      A,@DPTR
   \   00010F   28           ADD       A,R0
   \   000110   F8           MOV       R0,A
   \   000111   A3           INC       DPTR
   \   000112   E0           MOVX      A,@DPTR
   \   000113   3400         ADDC      A,#0x0
   \   000115   F9           MOV       R1,A
   \   000116   E8           MOV       A,R0
   \   000117   2408         ADD       A,#0x8
   \   000119   FA           MOV       R2,A
   \   00011A   E4           CLR       A
   \   00011B   39           ADDC      A,R1
   \   00011C   FB           MOV       R3,A
   \   00011D   75..80       MOV       ?V4,#-0x80
   \   000120   75..00       MOV       ?V5,#0x0
   \   000123   E5..         MOV       A,?V6
   \   000125   78..         MOV       R0,#?V4
   \   000127   12....       LCALL     ?SS_SHR
   \   00012A   7403         MOV       A,#0x3
   \   00012C   12....       LCALL     ?XSTACK_DISP0_8
   \   00012F   12....       LCALL     ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_19:
   \   000132   A3           INC       DPTR
   \   000133   E0           MOVX      A,@DPTR
   \   000134   55..         ANL       A,?V4
   \   000136   6007         JZ        ??halTFTShowChineseChar16x16_9
    478                              halTFTDrawPixel(x + c2 + 8, y + l, fontColor);
   \   000138                ; Setup parameters for call to function halTFTDrawPixel
   \   000138   78..         MOV       R0,#?V2
   \   00013A   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   00013D   8005         SJMP      ??halTFTShowChineseChar16x16_10
    479                          else
    480                              halTFTDrawPixel(x + c2 + 8, y + l, backgroundColor);
   \                     ??halTFTShowChineseChar16x16_9:
   \   00013F                ; Setup parameters for call to function halTFTDrawPixel
   \   00013F   78..         MOV       R0,#?V0
   \   000141   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \                     ??halTFTShowChineseChar16x16_10:
   \   000144   EE           MOV       A,R6
   \   000145   FC           MOV       R4,A
   \   000146   EF           MOV       A,R7
   \   000147   FD           MOV       R5,A
   \   000148   12....       LCALL     `??halTFTDrawPixel::?relay`; Banked call to: halTFTDrawPixel
   \   00014B   7402         MOV       A,#0x2
   \   00014D   12....       LCALL     ?DEALLOC_XSTACK8
    481                      }
   \   000150   05..         INC       ?V6
   \   000152   E5..         MOV       A,?V6
   \   000154   C3           CLR       C
   \   000155   9408         SUBB      A,#0x8
   \   000157   40AE         JC        ??halTFTShowChineseChar16x16_8
    482                  }
   \   000159   05..         INC       ?V7
   \   00015B   E5..         MOV       A,?V7
   \   00015D   C3           CLR       C
   \   00015E   9410         SUBB      A,#0x10
   \   000160   5003         JNC       $+5
   \   000162   02....       LJMP      ??CrossCallReturnLabel_17 & 0xFFFF
    483          
    484                  break;
    485              }
    486          }
   \                     ??halTFTShowChineseChar16x16_4:
   \   000165   7409         MOV       A,#0x9
   \   000167   02....       LJMP      ??Subroutine24_0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine15:
   \   000000   85..82       MOV       DPL,?XSP + 0
   \   000003   85..83       MOV       DPH,?XSP + 1
   \   000006   E0           MOVX      A,@DPTR
   \   000007   FA           MOV       R2,A
   \   000008   A3           INC       DPTR
   \   000009   E0           MOVX      A,@DPTR
   \   00000A   F583         MOV       DPH,A
   \   00000C   8A82         MOV       DPL,R2
   \   00000E   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine13:
   \   000000   E0           MOVX      A,@DPTR
   \   000001   F8           MOV       R0,A
   \   000002   A3           INC       DPTR
   \   000003   E0           MOVX      A,@DPTR
   \   000004   F583         MOV       DPH,A
   \   000006   8882         MOV       DPL,R0
   \   000008   A3           INC       DPTR
   \   000009   A3           INC       DPTR
   \   00000A   22           RET

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??halTFTInit::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halTFTInit

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??halTFTSetScreen::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halTFTSetScreen

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??halTFTShowX16::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halTFTShowX16

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??halTFTShowPicture::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halTFTShowPicture

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??ST7735SInit::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ST7735SInit

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??halTFTSetRegion::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halTFTSetRegion

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??halTFTDrawPixel::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halTFTDrawPixel

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??halTFTShowChar8x16::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halTFTShowChar8x16

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??halTFTShowChineseChar16x16::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halTFTShowChineseChar16x16

   Maximum stack usage in bytes:

   ISTACK XSTACK Function
   ------ ------ --------
      0     19   ST7735SInit
        0      9   -> delayMs
        0      9   -> halLcdSpiTxCmd
        0      9   -> halLcdSpiTxData
      0     41   halTFTDrawPixel
        0     10   -> halLcdSpiTxData
        0     14   -> halTFTSetRegion
      0     14   halTFTInit
        0     10   -> ST7735SInit
        0     10   -> halLcdSpiInit
        0     14   -> halTFTSetRegion
        0     10   -> halTFTSetScreen
      0     37   halTFTSetRegion
        0     15   -> halLcdSpiTxCmd
        0     15   -> halLcdSpiTxData
      0     24   halTFTSetScreen
        0     10   -> halLcdSpiTxData
        0     14   -> halTFTSetRegion
      2     48   halTFTShowChar8x16
        0     26   -> halTFTDrawPixel
      1     50   halTFTShowChineseChar16x16
        0     27   -> halTFTDrawPixel
      0     24   halTFTShowPicture
        0     18   -> halLcdSpiTxData
        0     22   -> halTFTSetRegion
      0     29   halTFTShowX16
        0     22   -> halTFTShowChar8x16
        0     23   -> halTFTShowChineseChar16x16


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       2  ??Subroutine20_0
       8  ??Subroutine21_0
      10  ??Subroutine22_0
      16  ??Subroutine23_0
       8  ??Subroutine24_0
       5  ?Subroutine0
       2  ?Subroutine1
      15  ?Subroutine10
      12  ?Subroutine11
       8  ?Subroutine12
      11  ?Subroutine13
      10  ?Subroutine14
      15  ?Subroutine15
      13  ?Subroutine16
       7  ?Subroutine17
       9  ?Subroutine18
       9  ?Subroutine19
       3  ?Subroutine2
      19  ?Subroutine3
      19  ?Subroutine4
       1  ?Subroutine5
       9  ?Subroutine6
       6  ?Subroutine7
       9  ?Subroutine8
       9  ?Subroutine9
     136  FontTable_Chinese_H_16X16
    1520  FontTable_H_8X16
     257  ST7735SInit
       6  ST7735SInit::?relay
       1  _A_P1
      54  halTFTDrawPixel
       6  halTFTDrawPixel::?relay
      45  halTFTInit
       6  halTFTInit::?relay
     162  halTFTSetRegion
       6  halTFTSetRegion::?relay
      57  halTFTSetScreen
       6  halTFTSetScreen::?relay
     271  halTFTShowChar8x16
       6  halTFTShowChar8x16::?relay
     362  halTFTShowChineseChar16x16
       6  halTFTShowChineseChar16x16::?relay
     183  halTFTShowPicture
       6  halTFTShowPicture::?relay
     209  halTFTShowX16
       6  halTFTShowX16::?relay

 
 1 835 bytes in segment BANKED_CODE
    54 bytes in segment BANK_RELAYS
     1 byte  in segment SFR_AN
 1 656 bytes in segment XDATA_ROM_C
 
    54 bytes of CODE     memory
 1 656 bytes of CONST    memory
     0 bytes of DATA     memory (+ 1 byte shared)
 1 835 bytes of HUGECODE memory

Errors: none
Warnings: none
